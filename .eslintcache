[{"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\index.tsx":"1","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\reportWebVitals.js":"2","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\App.tsx":"3","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\utils\\getLibrary.tsx":"4","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\constants\\index.tsx":"5","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\store.ts":"6","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\routes\\types.tsx":"7","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\web3\\web3Manager.tsx":"8","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\containers\\Layout.tsx":"9","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\hooks\\index.tsx":"10","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\connectors\\index.tsx":"11","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\reducers\\index.ts":"12","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\sagas\\modals.tsx":"13","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\hooks\\useBalance.tsx":"14","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\containers\\Main.tsx":"15","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\services\\walletService.tsx":"16","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\Auth.tsx":"17","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\404.tsx":"18","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\connectors\\fortmatic.tsx":"19","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\connectors\\networkConnector.tsx":"20","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\Sidebar.tsx":"21","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\Header\\Header.tsx":"22","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\SuspenseSpinner.tsx":"23","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\reducers\\modals.ts":"24","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\reducers\\diagrams.ts":"25","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\routes\\index.tsx":"26","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\actions\\index.ts":"27","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\hooks\\useContract.tsx":"28","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\utils\\index.tsx":"29","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\Header\\identicon.tsx":"30","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\GraphCreation\\GraphCreation.tsx":"31","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\ContractBalance\\ContractCard.tsx":"32","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\constants\\actions.ts":"33","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\mock\\mocks.tsx":"34","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\BuyGlq.tsx":"35","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\assets\\icons\\index.tsx":"36","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\hooks\\useWalletContract.tsx":"37","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\ContractBalance\\ModalDeposit.tsx":"38","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\ContractBalance\\ModalWithdraw.tsx":"39","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\GraphCreation\\BlankCard.tsx":"40","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\GraphCreation\\RadioCard.tsx":"41","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\GraphCreation\\TemplateFile.tsx":"42","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\services\\graphService.tsx":"43","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\GraphCreation\\TemplateCard.tsx":"44","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\enums\\graphState.tsx":"45","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\providers\\manager.tsx":"46","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\Presale.tsx":"47","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\Graphs.tsx":"48","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\Home.tsx":"49","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\Graphs\\GraphCard.tsx":"50","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\routes\\sidebar.tsx":"51","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\BrowserWallet\\WalletManager.tsx":"52","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\MotionBox.tsx":"53","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\Graphs\\GraphStatus.tsx":"54","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\BrowserWallet\\Option.tsx":"55","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\hooks\\usePrevious.tsx":"56","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\BrowserWallet\\PendingView.tsx":"57","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\Templates.tsx":"58","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\theme\\index.ts":"59","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\theme\\colors.ts":"60","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\theme\\components\\tooltip.ts":"61"},{"size":1198,"mtime":1620427589283,"results":"62","hashOfConfig":"63"},{"size":375,"mtime":1619449442565,"results":"64","hashOfConfig":"63"},{"size":781,"mtime":1620410923850,"results":"65","hashOfConfig":"63"},{"size":225,"mtime":1619449442637,"results":"66","hashOfConfig":"63"},{"size":1943,"mtime":1619449442532,"results":"67","hashOfConfig":"63"},{"size":672,"mtime":1619449442565,"results":"68","hashOfConfig":"63"},{"size":907,"mtime":1619449442567,"results":"69","hashOfConfig":"63"},{"size":1435,"mtime":1619449442638,"results":"70","hashOfConfig":"63"},{"size":1690,"mtime":1620432313103,"results":"71","hashOfConfig":"63"},{"size":2746,"mtime":1619449442547,"results":"72","hashOfConfig":"63"},{"size":2050,"mtime":1619451044632,"results":"73","hashOfConfig":"63"},{"size":120,"mtime":1619449442564,"results":"74","hashOfConfig":"63"},{"size":590,"mtime":1619449442630,"results":"75","hashOfConfig":"63"},{"size":1061,"mtime":1619449442548,"results":"76","hashOfConfig":"63"},{"size":280,"mtime":1619449442533,"results":"77","hashOfConfig":"63"},{"size":2524,"mtime":1619449442631,"results":"78","hashOfConfig":"63"},{"size":1779,"mtime":1620432114292,"results":"79","hashOfConfig":"63"},{"size":471,"mtime":1620432242521,"results":"80","hashOfConfig":"63"},{"size":1402,"mtime":1619449442530,"results":"81","hashOfConfig":"63"},{"size":4551,"mtime":1619449442531,"results":"82","hashOfConfig":"63"},{"size":2300,"mtime":1620431565243,"results":"83","hashOfConfig":"63"},{"size":5559,"mtime":1620513272988,"results":"84","hashOfConfig":"63"},{"size":467,"mtime":1620432375175,"results":"85","hashOfConfig":"63"},{"size":1589,"mtime":1619449442565,"results":"86","hashOfConfig":"63"},{"size":440,"mtime":1619449442564,"results":"87","hashOfConfig":"63"},{"size":948,"mtime":1620407124989,"results":"88","hashOfConfig":"63"},{"size":622,"mtime":1619449442563,"results":"89","hashOfConfig":"63"},{"size":1404,"mtime":1619449442548,"results":"90","hashOfConfig":"63"},{"size":3201,"mtime":1619449442638,"results":"91","hashOfConfig":"63"},{"size":1035,"mtime":1619449442527,"results":"92","hashOfConfig":"63"},{"size":10933,"mtime":1620474819710,"results":"93","hashOfConfig":"63"},{"size":1041,"mtime":1619449442520,"results":"94","hashOfConfig":"63"},{"size":138,"mtime":1619449442563,"results":"95","hashOfConfig":"63"},{"size":8555,"mtime":1619449442551,"results":"96","hashOfConfig":"63"},{"size":1362,"mtime":1620432048152,"results":"97","hashOfConfig":"63"},{"size":544,"mtime":1619449442512,"results":"98","hashOfConfig":"63"},{"size":1122,"mtime":1619449442549,"results":"99","hashOfConfig":"63"},{"size":6528,"mtime":1620411044717,"results":"100","hashOfConfig":"63"},{"size":5613,"mtime":1619449442521,"results":"101","hashOfConfig":"63"},{"size":1078,"mtime":1619449442522,"results":"102","hashOfConfig":"63"},{"size":1244,"mtime":1620411100811,"results":"103","hashOfConfig":"63"},{"size":790,"mtime":1619449442524,"results":"104","hashOfConfig":"63"},{"size":5381,"mtime":1620487698034,"results":"105","hashOfConfig":"63"},{"size":1136,"mtime":1619449442524,"results":"106","hashOfConfig":"63"},{"size":142,"mtime":1619449442540,"results":"107","hashOfConfig":"63"},{"size":10773,"mtime":1619449442555,"results":"108","hashOfConfig":"63"},{"size":8816,"mtime":1620431858296,"results":"109","hashOfConfig":"63"},{"size":5103,"mtime":1620513407510,"results":"110","hashOfConfig":"63"},{"size":3478,"mtime":1620431430123,"results":"111","hashOfConfig":"63"},{"size":9645,"mtime":1620411384635,"results":"112","hashOfConfig":"63"},{"size":830,"mtime":1620407049862,"results":"113","hashOfConfig":"63"},{"size":10393,"mtime":1619449442519,"results":"114","hashOfConfig":"63"},{"size":128,"mtime":1619449442527,"results":"115","hashOfConfig":"63"},{"size":1911,"mtime":1619449442526,"results":"116","hashOfConfig":"63"},{"size":868,"mtime":1619449442518,"results":"117","hashOfConfig":"63"},{"size":557,"mtime":1619449442549,"results":"118","hashOfConfig":"63"},{"size":2600,"mtime":1619449442519,"results":"119","hashOfConfig":"63"},{"size":11614,"mtime":1620559857954,"results":"120","hashOfConfig":"63"},{"size":471,"mtime":1620427233119,"results":"121","hashOfConfig":"63"},{"size":1408,"mtime":1620410914037,"results":"122","hashOfConfig":"63"},{"size":194,"mtime":1619449442636,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nchaen",{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"133"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"133"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"133"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"133"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"133"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"133"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"133"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"133"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"133"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"133"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"214","usedDeprecatedRules":"133"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"133"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"133"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"133"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"133"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"133"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"133"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"133"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\index.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\reportWebVitals.js",[],["266","267"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\App.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\utils\\getLibrary.tsx",[],["268","269"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\constants\\index.tsx",["270"],"\r\nimport { fortmatic, injected, portis, walletconnect, walletlink, bsc } from '../connectors/index'\r\n\r\nexport const SUPPORTED_WALLETS = {\r\n    INJECTED: {\r\n      connector: injected,\r\n      name: 'Injected',\r\n      iconName: 'MetaMaskIcon',\r\n      description: 'Injected web3 provider.',\r\n      href: null,\r\n      primary: true\r\n    },\r\n    // BINANCE: {\r\n    //   connector: bsc,\r\n    //   name: 'Binance Chain Wallet',\r\n    //   iconName: 'BinanceIcon',\r\n    //   description: 'A Crypto Wallet for Binance Chain, Binance Smart Chain and Ethereum',\r\n    //   href: null,\r\n    // },\r\n    METAMASK: {\r\n      connector: injected,\r\n      name: 'MetaMask',\r\n      iconName: 'MetaMaskIcon',\r\n      description: 'Easy-to-use browser extension.',\r\n      href: null,\r\n    },\r\n    WALLET_CONNECT: {\r\n      connector: walletconnect,\r\n      name: 'WalletConnect',\r\n      iconName: 'WalletConnectIcon',\r\n      description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\r\n      href: null,\r\n      mobile: true\r\n    },\r\n    WALLET_LINK: {\r\n      connector: walletlink,\r\n      name: 'Coinbase Wallet',\r\n      iconName: 'CoinbaseWalletIcon',\r\n      description: 'Use Coinbase Wallet app on mobile device',\r\n      href: null,\r\n    },\r\n    COINBASE_LINK: {\r\n      name: 'Open in Coinbase Wallet',\r\n      iconName: 'CoinbaseWalletIcon',\r\n      description: 'Open in Coinbase Wallet app.',\r\n      href: 'https://go.cb-w.com/mtUDhEZPy1',\r\n      mobile: true,\r\n      mobileOnly: true\r\n    },\r\n    FORTMATIC: {\r\n      connector: fortmatic,\r\n      name: 'Fortmatic',\r\n      iconName: 'FortmaticIcon',\r\n      description: 'Login using Fortmatic hosted wallet',\r\n      href: null,\r\n      mobile: true\r\n    },\r\n    Portis: {\r\n      connector: portis,\r\n      name: 'Portis',\r\n      iconName: 'PortisIcon',\r\n      description: 'Login using Portis hosted wallet',\r\n      href: null,\r\n      mobile: true\r\n    }\r\n  }\r\n  \r\n  export const NetworkContextName = 'NETWORK'","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\store.ts",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\routes\\types.tsx",["271","272","273"],"import { Route, Redirect } from \"react-router-dom\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport WalletService from \"../services/walletService\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthComponent from \"../pages/Auth\"\r\n\r\nexport const CustomRoute = ({ component, ...rest }: any) => {\r\n  const { account } = useWeb3React();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!account) { return }\r\n    if (!WalletService.verifySessionIntegrity(account)) {\r\n      return history.push(\"/\");\r\n    }\r\n  }, [account])\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        account === undefined || localStorage.getItem(\"session\") == null ? (\r\n          React.createElement(AuthComponent, props)\r\n        ) : (\r\n          React.createElement(component, props)\r\n        )\r\n      }\r\n    />\r\n  );\r\n};","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\web3\\web3Manager.tsx",["274"],"import { useEffect } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport { network } from \"../connectors\";\r\nimport { useEagerConnect, useInactiveListener } from \"../hooks\";\r\n// import { useHornBalance } from 'src/hooks/useHornBalance'\r\nimport { useBalance } from \"../hooks/useBalance\";\r\n\r\nimport { NetworkContextName } from \"../constants\";\r\n\r\nexport default function Web3ReactManager({ children }: any) {\r\n  const { active, chainId, account } = useWeb3React();\r\n  const {\r\n    active: networkActive,\r\n    error: networkError,\r\n    activate: activateNetwork,\r\n  } = useWeb3React(NetworkContextName);\r\n  const { refreshBalance }: any = useBalance();\r\n\r\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\r\n  const triedEager = useEagerConnect();\r\n\r\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\r\n  useEffect(() => {\r\n    if (triedEager && !networkActive && !networkError && !active) {\r\n      activateNetwork(network);\r\n    }\r\n  }, [triedEager, networkActive, networkError, activateNetwork, active]);\r\n\r\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\r\n  useInactiveListener(!triedEager);\r\n\r\n  useEffect(() => {\r\n    // setting account and refreshing glq balance\r\n    refreshBalance();\r\n  }, [chainId, account]);\r\n\r\n  return children;\r\n}\r\n","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\containers\\Layout.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\hooks\\index.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\connectors\\index.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\reducers\\index.ts",["275"],"import {diagrams} from './diagrams';\r\nimport {modals} from './modals';\r\n\r\nexport default {\r\n  modals,\r\n  diagrams,\r\n};\r\n","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\sagas\\modals.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\hooks\\useBalance.tsx",["276"],"import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { utils } from 'ethers';\r\nimport { UPDATE_BALANCE } from '../redux/actions/index';\r\nimport { useActiveWeb3React } from '.';\r\nimport { useTokenContract } from './useContract';\r\n\r\nexport function useBalance() {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const balance = useSelector(state => (state as any).modals.balance);\r\n\r\n  const tokenContract = useTokenContract(process.env.REACT_APP_GRAPHLINQ_TOKEN_CONTRACT);\r\n\r\n  const refreshBalance = useCallback(async () => {\r\n      if (!account || !tokenContract) {\r\n        return;\r\n      }\r\n      try {\r\n      const balanceOf = await tokenContract.balanceOf(account);\r\n      if (!balanceOf) return;\r\n  \r\n      const balance = parseFloat(utils.formatUnits(balanceOf, 18));\r\n      dispatch({ type: UPDATE_BALANCE, payload: {balance}, name: 'balance'});\r\n      } catch (e) { console.error(e) }\r\n\r\n  }, [account, tokenContract]);\r\n\r\n return { balance, refreshBalance }\r\n}\r\n","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\containers\\Main.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\services\\walletService.tsx",["277"],"import ManagerProvider from \"../providers/manager\"\r\nimport AuthResponse from \"../providers/responses/auth\"\r\nimport { WalletBalanceResponse } from \"../providers/responses/balance\";\r\nimport { ResponseSuccess } from \"../providers/responses/success\";\r\n\r\n\r\nexport default class WalletService {\r\n    public static async authWallet(addr: string, sign: string): Promise<boolean>\r\n    {\r\n        try\r\n        {\r\n            const result: AuthResponse = await ManagerProvider.authRequest({\r\n                address: addr,\r\n                signature: sign\r\n            })\r\n        \r\n            if (result) {\r\n                localStorage.setItem('session', JSON.stringify({token: result.accessToken, addr: addr}))\r\n            }\r\n            return result.auth;\r\n        }\r\n        catch (error)\r\n        {\r\n            console.error(error)\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public static verifySessionIntegrity(currAcc: string): boolean {\r\n        if (localStorage.getItem(\"session\") != null) {\r\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\r\n            if (session.addr !== currAcc) { \r\n              localStorage.removeItem('session')\r\n              return false;\r\n            }\r\n          }\r\n        else if (localStorage.getItem(\"session\") == null) { return false; }\r\n        \r\n        return true;\r\n    }\r\n\r\n    public static async getBalance(addr: string): Promise<WalletBalanceResponse | undefined> {\r\n        try\r\n        {\r\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\r\n            const result: WalletBalanceResponse = await ManagerProvider.fetchBalanceWallet({address: addr}, session.token)\r\n            return result\r\n        }\r\n        catch (error)\r\n        {\r\n            console.error(error)\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n\r\n    public static async withdraw(amount: number): Promise<ResponseSuccess | String > {\r\n        try\r\n        {\r\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\r\n            const result: ResponseSuccess = await ManagerProvider.withdrawBalanceWallet({amount}, session.token)\r\n            return result\r\n        }\r\n        catch (error)\r\n        {\r\n            if (!error.success) {\r\n                var errorMsg: String = new String(error.msg)\r\n                return errorMsg\r\n            }\r\n            console.error(JSON.stringify(error))\r\n            return \"An internal server error occured, please try again later\";\r\n        }\r\n    }\r\n\r\n\r\n}","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\Auth.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\404.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\connectors\\fortmatic.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\connectors\\networkConnector.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\Sidebar.tsx",["278"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\Header\\Header.tsx",["279","280","281","282"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\SuspenseSpinner.tsx",["283"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\reducers\\modals.ts",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\reducers\\diagrams.ts",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\routes\\index.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\actions\\index.ts",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\hooks\\useContract.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\utils\\index.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\Header\\identicon.tsx",["284"],"import React, { useEffect, useRef } from 'react';\r\nimport { Avatar, forwardRef, AvatarProps } from '@chakra-ui/react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Jazzicon from 'jazzicon';\r\nimport { useActiveWeb3React } from '../../hooks';\r\n\r\nconst StyledIdenticonContainer = styled.div`\r\n  margin:auto;\r\n  height: 1rem;\r\n  width: 1rem;\r\n  border-radius: 1.125rem;\r\n  background-color: #CED0D9;\r\n`\r\n\r\nexport default function Identicon() {\r\n  const ref = useRef()\r\n\r\n  const { account } = useActiveWeb3React()\r\n\r\n  useEffect(() => {\r\n    if (account && ref.current) {\r\n      (ref as any).current.innerHTML = ''\r\n      const jazzicon = (ref as any).current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)))\r\n      jazzicon.style.display = 'block';\r\n    }\r\n  }, [account])\r\n\r\n  return (\r\n    <JazzAvatar ref={ref as any} />\r\n  )\r\n}\r\n\r\nconst JazzAvatar = forwardRef<AvatarProps, \"div\">((props, ref) => (\r\n  <Avatar\r\n    bgColor=\"white\"\r\n    size=\"xs\"\r\n    ml={-2}\r\n    mr={2}\r\n    ref={ref}\r\n    {...props}\r\n  />\r\n))\r\n","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\GraphCreation\\GraphCreation.tsx",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\ContractBalance\\ContractCard.tsx",["304","305","306","307","308","309","310","311","312","313"],"import { Box, Button, ButtonGroup, Icon, Text } from '@chakra-ui/react';\r\nimport { FiArrowDownLeft } from 'react-icons/fi';\r\nimport { ModalDeposit } from './ModalDeposit';\r\nimport { ModalWithdraw } from './ModalWithdraw';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { useWalletContract } from \"../../hooks/useWalletContract\"\r\n\r\ninterface ContractCardProps {\r\n\r\n}\r\n\r\nexport const ContractCard: React.FC<ContractCardProps> = ({ }) => {\r\n\r\n    const { account } = useWeb3React();\r\n    const {balance, refreshBalanceContract} =  useWalletContract();\r\n\r\n    useEffect(()  => {\r\n        refreshBalanceContract();\r\n    }, [account])\r\n\r\n    return (\r\n        <div className=\"bal\">\r\n            <h2>Cloud Contract Balance</h2>\r\n            <div className=\"val in\"><strong>{balance.amount}</strong> GLQ</div>\r\n            <div className=\"act\">\r\n                <ModalDeposit />\r\n                <ModalWithdraw />\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\redux\\constants\\actions.ts",["314"],"import { AnyAction } from \"redux\";\r\n\r\nexport const RESET_REDUX_STATE = \"RESET_REDUX_STATE\"\r\nexport const DIAGRAM_UPDATE = \"DIAGRAM_UPDATE\"","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\mock\\mocks.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\BuyGlq.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\assets\\icons\\index.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\hooks\\useWalletContract.tsx",["315"],"import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { utils } from 'ethers';\r\nimport { UPDATE_BALANCE_CONTRACT } from '../redux/actions/index';\r\nimport { useActiveWeb3React } from '.';\r\nimport { useBalanceContract } from './useContract';\r\n\r\nexport function useWalletContract() {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  const balance = useSelector(state => (state as any).modals.balanceContract);\r\n\r\n  const contract = useBalanceContract(process.env.REACT_APP_GRAPHLINQ_BALANCE_CONTRACT);\r\n\r\n  const refreshBalanceContract = useCallback(async () => {\r\n      if (!account || !contract) {\r\n        return;\r\n      }\r\n      try {\r\n      const balanceOf = await contract.getBalance(account);\r\n      if (!balanceOf) return;\r\n  \r\n      const balance = parseFloat(utils.formatUnits(balanceOf, 18));\r\n      dispatch({ type: UPDATE_BALANCE_CONTRACT, payload: {balanceContract: balance}, name: 'balanceContract'});\r\n      } catch (e) { console.error(e) }\r\n\r\n  }, [account, contract]);\r\n\r\n return { balance, refreshBalanceContract }\r\n}\r\n","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\ContractBalance\\ModalDeposit.tsx",["316","317","318","319","320","321","322","323","324","325"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\ContractBalance\\ModalWithdraw.tsx",["326","327","328","329","330","331","332","333","334"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Icon, Text, Alert, AlertDescription, AlertIcon, AlertTitle, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, Stack, useDisclosure } from '@chakra-ui/react';\r\nimport { FiArrowDownLeft } from 'react-icons/fi';\r\nimport { useActiveWeb3React } from '../../hooks';\r\nimport WalletService from '../../services/walletService';\r\nimport { ResponseSuccess } from '../../providers/responses/success';\r\nimport { useWalletContract } from '../../hooks/useWalletContract';\r\n\r\ninterface ModalWithdrawProps {\r\n\r\n}\r\n\r\nexport const ModalWithdraw: React.FC<ModalWithdrawProps> = ({ }) => {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const finalRef = React.useRef()\r\n    const { account } = useActiveWeb3React()\r\n    const [dueBalance, setDueBalance] = useState(0)\r\n    const [amountWithdraw, setAmountWithdraw] = useState(\"0.0\");\r\n    const [error, setError] = useState(\"\");\r\n    const [pending, setPending] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    const {refreshBalanceContract} =  useWalletContract();\r\n\r\n    const format = (val: string) => val + ` GLQ`;\r\n    const parse = (val: string) => val.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1');\r\n\r\n    useEffect(() => {\r\n        const getCloudBalance = async () => {\r\n            try {\r\n                const result = await WalletService.getBalance(account ?? \"\")\r\n                if (result?.due_balance) {\r\n                    setDueBalance(result.due_balance)\r\n                }\r\n            } catch (e) {\r\n                console.error(e)\r\n            }\r\n        }\r\n        getCloudBalance()\r\n    }, [account])\r\n\r\n    async function doWithdraw()\r\n    {\r\n        const asNumber: number = parseFloat(amountWithdraw)\r\n        if (asNumber <= 0) {\r\n            setError(`Invalid amount to withdraw from the balance contract: ${asNumber} GLQ`)\r\n            return \r\n        }\r\n\r\n        setPending(\"Pending, waiting for server response...\")\r\n        const result: ResponseSuccess | String = await WalletService.withdraw(asNumber)\r\n        if (result instanceof String) {\r\n            setPending(\"\"); setError(result.toString());\r\n            return;\r\n        }\r\n        if (result.success) {\r\n            setPending(\"\")\r\n            setError(\"\")\r\n            setSuccess(result.hash)\r\n        }\r\n\r\n        setTimeout(() => {\r\n            refreshBalanceContract()\r\n        }, 1000)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button className=\"sbt\" ref={finalRef as any} onClick={onOpen}>Withdraw <i className=\"fal fa-long-arrow-down\"></i></button>\r\n            <Modal finalFocusRef={finalRef as any} isOpen={isOpen} onClose={onClose} key=\"test\" isCentered>\r\n                <ModalOverlay className=\"ov\" />\r\n                <ModalContent className=\"mod mod-dep\">\r\n                    <header><h2>Withdraw</h2></header>\r\n                    <ModalCloseButton className=\"clo\" />\r\n                    <ModalBody class=\"fred\">\r\n                        <Stack spacing={3} p=\"4\">\r\n                            {error &&\r\n                            <Alert status=\"error\">\r\n                                <i className=\"fal fa-times-circle\"></i> \r\n                                <p>{error}</p>\r\n                            </Alert>\r\n                            }\r\n                            {!success && pending &&\r\n                            <Alert status=\"info\">\r\n                                <i className=\"fal fa-info-circle\"></i> \r\n                                <p>{pending}</p>\r\n                            </Alert>\r\n                            }\r\n                            {success &&\r\n                            <Alert status=\"success\">\r\n                                <i className=\"fal fa-check-circle\"></i>\r\n                                <p>Withdraw successfully completed !</p>\r\n                                <p><small>Transaction hash : <a href={`https://etherscan.com/tx/${success}`} target=\"_blank\">{success}</a></small></p>\r\n                            </Alert>\r\n                            }\r\n                            <Alert status=\"info\" className=\"alert-m\">\r\n                                <i className=\"fal fa-info-circle\"></i>\r\n                                <p>You currently have <b>{dueBalance} GLQ</b> of execution cost from executed graphs to burn.</p>\r\n                            </Alert>\r\n                            <NumberInput className=\"fd in\"\r\n                                placeholder=\"GLQ Amount\"\r\n                                onChange={(value) => { setAmountWithdraw(parse(value)) }}\r\n                                value={format(amountWithdraw)}\r\n                                size=\"lg\"\r\n                                defaultValue={0}\r\n                                min={0}\r\n                                focusBorderColor=\"#3907ff\"\r\n                                step={0.1}>\r\n                                <NumberInputField />\r\n                                <NumberInputStepper>\r\n                                    <NumberIncrementStepper color=\"#3907ff\" />\r\n                                    <NumberDecrementStepper color=\"#3907ff\" />\r\n                                </NumberInputStepper>\r\n                            </NumberInput>\r\n                            <Button onClick={doWithdraw} className=\"bt\">Withdraw</Button>\r\n                        </Stack>\r\n                    </ModalBody>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\GraphCreation\\BlankCard.tsx",["335","336","337","338","339"],"import React, {useEffect} from 'react'\r\nimport { Box, useRadio, Icon, Flex } from '@chakra-ui/react';\r\nimport { FiFile } from 'react-icons/fi';\r\nimport TemplateLogo from \"../../assets/radio/r-01.svg\"\r\nimport TemplateLogoSelect from \"../../assets/radio/r-04.svg\"\r\n\r\ninterface BlankCardProps {\r\n\r\n}\r\n\r\nexport const BlankCard: React.FC<BlankCardProps> = (props) => {\r\n\r\n    return (\r\n         <>\r\n            <div className=\"lgc\">\r\n                <Box\r\n                    className=\"lg-nsl\"\r\n                    h=\"50px\"\r\n                    maxH=\"50px\"\r\n                    bgImage={\"url('\" + TemplateLogo + \"')\"}\r\n                    bgPosition=\"center\"\r\n                    bgRepeat=\"no-repeat\"\r\n                />\r\n                <Box\r\n                    className=\"lg-sl\"\r\n                    h=\"50px\"\r\n                    maxH=\"50px\"\r\n                    bgImage={\"url('\" + TemplateLogoSelect + \"')\"}\r\n                    bgPosition=\"center\"\r\n                    bgRepeat=\"no-repeat\"\r\n                />\r\n                Blank\r\n            </div>\r\n        </> \r\n    );\r\n}","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\GraphCreation\\RadioCard.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\GraphCreation\\TemplateFile.tsx",["340","341","342","343","344"],"import React from 'react'\r\nimport { FormControl, FormLabel, Input } from '@chakra-ui/react'\r\nimport { Alert, AlertIcon, Grid, Heading } from '@chakra-ui/react';\r\n\r\ninterface TemplateFileProps {\r\n    file: File\r\n    name: string\r\n}\r\n\r\nexport const TemplateFile: React.FC<TemplateFileProps> = (props: TemplateFileProps) => {\r\n\r\n    return (\r\n        <>\r\n            <FormControl isRequired>\r\n                <Alert status=\"info\">\r\n                    <i className=\"fal fa-info-circle\"></i> \r\n                    <p>You're about to deploy a new graph named \"{props.name}\" based on the file {props.file.name} you uploaded,\r\n                    it will be directly launched with the STARTING state over the Engine.</p>\r\n                </Alert>\r\n            </FormControl>\r\n        </>\r\n    )\r\n}","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\services\\graphService.tsx",["345","346","347","348"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\GraphCreation\\TemplateCard.tsx",["349","350","351"],"import React from 'react'\r\nimport { Box, Image, Badge, useRadio } from '@chakra-ui/react';\r\nimport TemplateLogo from \"../../assets/radio/r-02.svg\"\r\nimport TemplateLogoSelect from \"../../assets/radio/r-03.svg\"\r\n\r\ninterface TemplateCardProps {\r\n    TemplateImageUrl: string,\r\n    TemplateImageAlt: string,\r\n    TemplateTitle: string,\r\n}\r\n\r\nexport const TemplateCard: React.FC<TemplateCardProps> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"lgc\">\r\n                <Box\r\n                    className=\"lg-nsl\"\r\n                    h=\"50px\"\r\n                    maxH=\"50px\"\r\n                    bgImage={\"url('\" + TemplateLogo + \"')\"}\r\n                    bgPosition=\"center\"\r\n                    bgRepeat=\"no-repeat\"\r\n                />\r\n                <Box\r\n                    className=\"lg-sl\"\r\n                    h=\"50px\"\r\n                    maxH=\"50px\"\r\n                    bgImage={\"url('\" + TemplateLogoSelect + \"')\"}\r\n                    bgPosition=\"center\"\r\n                    bgRepeat=\"no-repeat\"\r\n                />\r\n                {props.TemplateTitle}\r\n            </div>\r\n        </>\r\n    );\r\n}","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\enums\\graphState.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\providers\\manager.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\Presale.tsx",["352","353","354"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\Graphs.tsx",["355","356","357"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\Home.tsx",["358","359","360"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\Graphs\\GraphCard.tsx",["361","362","363","364","365","366","367","368","369","370","371"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\routes\\sidebar.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\BrowserWallet\\WalletManager.tsx",["372","373","374","375","376","377","378"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  OPEN_MODAL,\r\n  CLOSE_MODAL,\r\n  ACCOUNT_UPDATE,\r\n} from \"../../redux/actions/index\";\r\n\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { bsc, fortmatic, injected, portis } from \"../../connectors/index\";\r\nimport { OVERLAY_READY } from \"../../connectors/fortmatic\";\r\n\r\nimport { SUPPORTED_WALLETS } from \"../../constants/index\";\r\nimport usePrevious from \"../../hooks/usePrevious\";\r\n\r\nimport Option from \"./Option\";\r\nimport PendingView from \"./PendingView\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport WalletService from \"../../services/walletService\";\r\nimport Web3 from \"web3\"\r\nimport { Alert, AlertDescription, AlertIcon, AlertTitle, Box, Text, Link } from \"@chakra-ui/react\";\r\n\r\nconst WALLET_VIEWS = {\r\n  OPTIONS: \"options\",\r\n  OPTIONS_SECONDARY: \"options_secondary\",\r\n  ACCOUNT: \"account\",\r\n  PENDING: \"pending\",\r\n};\r\n\r\nconst WalletManager = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { active, account, connector, activate, error, library } = useWeb3React();\r\n\r\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\r\n\r\n  const [pendingWallet, setPendingWallet] = useState();\r\n\r\n  const [pendingError, setPendingError] = useState(false);\r\n\r\n  const previousAccount = usePrevious(account);\r\n\r\n  const walletModalOpen = useSelector(\r\n    (state: any) => state.modals.walletManager.show\r\n  );\r\n\r\n  const binanceWalletSign = async (web3: any) => {\r\n    return new Promise<string>((res, rej) => {\r\n      web3\r\n      .request({\r\n        method: 'eth_sign',\r\n        params: [account, process.env.REACT_APP_SIGN_KEY as string],\r\n      })\r\n      .then((result: any) => {\r\n       res(result)\r\n      })\r\n      .catch((error: any) => {\r\n        rej(error)\r\n    });\r\n    })\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!account) { return }\r\n    if (WalletService.verifySessionIntegrity(account)) {\r\n      return history.push(\"/\");\r\n    }\r\n      (async () => {\r\n        console.log(activate)\r\n        let web3: any = undefined\r\n        let signature: string = \"\"\r\n        const firstChain = (connector as any).supportedChainIds[0]\r\n        // if ((window as any).BinanceChain !== undefined && firstChain !== 100) {\r\n        //   web3 = (window as any).BinanceChain\r\n        //   try {\r\n        //     signature = await binanceWalletSign(web3)\r\n        //   } catch (e) { console.error(e)}\r\n        // }\r\n        // else \r\n        if ((window as any).ethereum !== undefined) {\r\n          web3 = new Web3((window as any).ethereum)\r\n          try {\r\n            signature = await web3.eth.personal.sign(process.env.REACT_APP_SIGN_KEY as string, account, \"\")\r\n          } catch (e) { console.error(e) }\r\n        }\r\n        const result = await WalletService.authWallet(account, signature)\r\n\r\n        if (result) {\r\n          dispatch({\r\n            name: \"walletManager\",\r\n            type: ACCOUNT_UPDATE,\r\n            payload: {\r\n              account,\r\n            },\r\n          });\r\n          return history.push(\"/\");\r\n        }\r\n    })()\r\n  }, [account])\r\n\r\n  const toggleWalletModal = () => {\r\n    if (walletModalOpen) dispatch({ type: CLOSE_MODAL, name: \"walletManager\" });\r\n    else dispatch({ type: OPEN_MODAL, name: \"walletManager\" });\r\n  };\r\n\r\n  // close on connection, when logged out before\r\n  useEffect(() => {\r\n    if (account && !previousAccount && walletModalOpen) {\r\n      toggleWalletModal();\r\n    }\r\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]);\r\n\r\n  // always reset to account view\r\n  useEffect(() => {\r\n    if (walletModalOpen) {\r\n      setPendingError(false);\r\n      setWalletView(WALLET_VIEWS.ACCOUNT);\r\n    }\r\n  }, [walletModalOpen]);\r\n\r\n  // close modal when a connection is successful\r\n  const activePrevious = usePrevious(active);\r\n  const connectorPrevious = usePrevious(connector);\r\n  useEffect(() => {\r\n    if (\r\n      walletModalOpen &&\r\n      ((active && !activePrevious) ||\r\n        (connector && connector !== connectorPrevious && !error))\r\n    ) {\r\n      setWalletView(WALLET_VIEWS.ACCOUNT);\r\n    }\r\n  }, [\r\n    setWalletView,\r\n    active,\r\n    error,\r\n    connector,\r\n    walletModalOpen,\r\n    activePrevious,\r\n    connectorPrevious,\r\n  ]);\r\n\r\n  const tryActivation = async (connector: any) => {\r\n    Object.keys(SUPPORTED_WALLETS).map((key) => {\r\n      if (connector === (SUPPORTED_WALLETS as any)[key].connector) {\r\n        return (SUPPORTED_WALLETS as any)[key].name;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    setPendingWallet(connector); // set wallet for pending view\r\n    setWalletView(WALLET_VIEWS.PENDING);\r\n\r\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\r\n    if (\r\n      connector instanceof WalletConnectConnector &&\r\n      connector.walletConnectProvider?.wc?.uri\r\n    ) {\r\n      connector.walletConnectProvider = undefined;\r\n    }\r\n\r\n    connector &&\r\n      activate(connector, undefined, true).catch((error) => {\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          activate(connector); // a little janky...can't use setError because the connector isn't set\r\n        } else {\r\n          setPendingError(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  // close wallet modal if fortmatic modal is active\r\n  useEffect(() => {\r\n    fortmatic.on(OVERLAY_READY, () => {\r\n      toggleWalletModal();\r\n    });\r\n  }, [toggleWalletModal]);\r\n\r\n  // get wallets user can switch too, depending on device/browser\r\n  function getOptions() {\r\n    const isMetamask =\r\n      (window as any).ethereum && (window as any).ethereum.isMetaMask;\r\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\r\n      const option = (SUPPORTED_WALLETS as any)[key];\r\n      // check for mobile options\r\n      if (isMobile) {\r\n        // disable portis on mobile for now\r\n        if (option.connector === portis) {\r\n          return null;\r\n        }\r\n\r\n        if (\r\n          !(window as any).web3 &&\r\n          !(window as any).ethereum &&\r\n          option.mobile\r\n        ) {\r\n          return (\r\n            <Option\r\n              onClick={() => {\r\n                option.connector !== connector &&\r\n                  !option.href &&\r\n                  tryActivation(option.connector);\r\n              }}\r\n              id={`connect-${key}`}\r\n              key={key}\r\n              active={option.connector && option.connector === connector}\r\n              link={option.href}\r\n              header={option.name}\r\n              icon={option.iconName}\r\n            />\r\n          );\r\n        }\r\n        return null;\r\n      }\r\n\r\n      // overwrite injected when needed\r\n      if (option.connector === injected || option.connector === bsc) {\r\n        // don't show injected if there's no injected provider\r\n        if (!((window as any).web3 || (window as any).ethereum)) {\r\n          if (option.name === \"MetaMask\") {\r\n            return (\r\n              <Option\r\n                id={`connect-${key}`}\r\n                key={key}\r\n                header=\"Install Metamask\"\r\n                subheader={undefined}\r\n                link=\"https://metamask.io/\"\r\n                icon={\"MetaMaskIcon\"}\r\n              />\r\n            );\r\n          }\r\n          else if (option.name === \"Binance Chain Wallet\") {\r\n            return (\r\n              <Option\r\n                id={`connect-${key}`}\r\n                key={key}\r\n                header=\"Install Binance Chain Wallet\"\r\n                subheader={undefined}\r\n                link=\"https://chrome.google.com/webstore/detail/binance-chain-wallet/fhbohimaelbohpjbbldcngcnapndodjp\"\r\n                icon={\"BinanceIcon\"}\r\n              />\r\n            );\r\n          }\r\n          return null; // dont want to return install twice\r\n        }\r\n        // don't return metamask if injected provider isn't metamask\r\n        if (option.name === \"MetaMask\" && !isMetamask) {\r\n          return null;\r\n        }\r\n        // likewise for generic\r\n        if (option.name === \"Injected\" && isMetamask) {\r\n          return null;\r\n        }\r\n      }\r\n\r\n      // return rest of options\r\n      return (\r\n        !isMobile &&\r\n        !option.mobileOnly && (\r\n          <Option\r\n            id={`connect-${key}`}\r\n            onClick={() => {\r\n              option.connector === connector\r\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\r\n                : !option.href && tryActivation(option.connector);\r\n            }}\r\n            key={key}\r\n            active={option.connector === connector}\r\n            link={option.href}\r\n            header={option.name}\r\n            subheader={undefined} // use option.descriptio to bring back multi-line\r\n            icon={option.iconName}\r\n          />\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  function getContent() {\r\n    if (error) {\r\n      console.log(error);\r\n      return (\r\n        <Alert\r\n          status=\"error\"\r\n          variant=\"subtle\"\r\n        >\r\n          <AlertIcon boxSize=\"40px\" mr={0} />\r\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\">\r\n            {error instanceof UnsupportedChainIdError\r\n              ? \"Wrong Network\"\r\n              : \"Error connecting\"}\r\n          </AlertTitle>\r\n          <AlertDescription maxWidth=\"sm\">\r\n            {error instanceof UnsupportedChainIdError ? (\r\n              <Box>\r\n                <Text>Please connect to the appropriate Ethereum network (Ropsten Or Mainnet).</Text>\r\n                <Link href=\"https://docs.graphlinq.io/wallet/1-index\" textDecoration=\"underline\" isExternal>Check out the documentation about wallet</Link>\r\n              </Box>\r\n            ) : (\r\n                \"Error connecting. Try refreshing the page.\"\r\n              )}\r\n          </AlertDescription>\r\n        </Alert>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {walletView === WALLET_VIEWS.PENDING ? (\r\n          <PendingView\r\n            connector={pendingWallet}\r\n            error={pendingError}\r\n            setPendingError={setPendingError}\r\n            tryActivation={tryActivation}\r\n          />\r\n        ) : (\r\n            <>{getOptions()}</>\r\n          )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <>{getContent()}</>;\r\n};\r\n\r\nexport default WalletManager;\r\n","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\MotionBox.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\Graphs\\GraphStatus.tsx",["379"],"import { Tooltip, Box } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { GraphStateEnum } from '../../enums/graphState';\r\n\r\ninterface GraphStatusProps {\r\n    state: number,\r\n}\r\n\r\nexport const GraphStatus: React.FC<GraphStatusProps> = ({ state }) => {\r\n    return (\r\n            <StatusIcon status={state} />\r\n    );\r\n}\r\n\r\nfunction StatusIcon({ status }: any) {\r\n    if (status === GraphStateEnum.Stopped) { /* stopped */\r\n        return (\r\n            <Tooltip hasArrow arrowSize={10} label=\"Stopped\" bg=\"gray.900\" color=\"white\" size=\"xs\" placement=\"top\">\r\n                <i className=\"tool fal fa-stop\"></i>\r\n            </Tooltip >\r\n        );\r\n    }\r\n    if (status === GraphStateEnum.Starting || status === GraphStateEnum.Started) { /* running */\r\n        return (\r\n            <Tooltip hasArrow arrowSize={10} label=\"Running\" bg=\"gray.900\" color=\"white\" size=\"xs\" placement=\"top\">\r\n                <i className=\"tool play\"></i>\r\n            </Tooltip >\r\n        );\r\n    }\r\n    if (status === GraphStateEnum.InError) { /* error */\r\n        return (\r\n            <Tooltip hasArrow arrowSize={10} label=\"In Error State\" bg=\"gray.900\" color=\"white\" size=\"xs\" placement=\"top\">\r\n                <i className=\"tool fal fa-times-circle\"></i>\r\n            </Tooltip >\r\n        );\r\n    }\r\n    if (status === GraphStateEnum.Restarting) { /* restarting */\r\n        return (\r\n            <Tooltip hasArrow arrowSize={10} label=\"Restarting\" bg=\"gray.900\" color=\"white\" size=\"xs\" placement=\"top\">\r\n                <i className=\"tool fal fa-sync\"></i>\r\n            </Tooltip >\r\n        );\r\n    }\r\n    if (status === GraphStateEnum.InPause) { /* paused */\r\n        return (\r\n            <Tooltip hasArrow arrowSize={10} label=\"Paused\" bg=\"gray.900\" color=\"white\" size=\"xs\" placement=\"top\">\r\n                <i className=\"tool fal fa-pause\"></i>\r\n            </Tooltip >\r\n        );\r\n    }\r\n    return null;\r\n}","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\BrowserWallet\\Option.tsx",["380","381","382"],"import React from 'react'\r\nimport { Button, Text, Box, Icon, Spacer, Link } from '@chakra-ui/react';\r\nimport * as WalletIcons from \"../../assets/icons\";\r\n\r\nexport default function Option({\r\n    link = \"\",\r\n    clickable = true,\r\n    size = 0,\r\n    onClick = () => { },\r\n    color = \"\",\r\n    header = \"\",\r\n    subheader = \"\",\r\n    icon = \"\",\r\n    active = false,\r\n    id = \"\"\r\n}) {\r\n    const content = (\r\n        <Button\r\n            id={id}\r\n            isActive={active}\r\n            _active={{ backgroundColor: \"indigo.50\" }}\r\n            onClick={onClick}\r\n        >\r\n            <span>{header}</span>\r\n            <Icon as={(WalletIcons as any)[icon]} w={6} h={6} />\r\n        </Button>\r\n    )\r\n    if (link) {\r\n        return (\r\n            <Link href={link} isExternal>\r\n                {content}\r\n            </Link>\r\n        )\r\n    }\r\n\r\n    return content\r\n}\r\n","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\hooks\\usePrevious.tsx",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\components\\BrowserWallet\\PendingView.tsx",["383","384"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { darken } from 'polished'\r\nimport { SUPPORTED_WALLETS } from '../../constants/index'\r\nimport { injected } from '../../connectors/index'\r\nimport Option from './Option'\r\nimport { Alert, AlertIcon, Button, Spacer } from '@chakra-ui/react'\r\n\r\nexport default function PendingView({\r\n    connector,\r\n    error = false,\r\n    setPendingError,\r\n    tryActivation\r\n}: any) {\r\n    const isMetamask = (window as any)?.ethereum?.isMetaMask\r\n\r\n    return (\r\n        <>\r\n                {error ? (\r\n                    <Alert variant=\"left-accent\" status=\"error\" mb={3} py={2} borderRadius=\"md\">\r\n                        <AlertIcon />\r\n                            Error connecting.\r\n                        <Spacer />\r\n                        <Button\r\n                            variant=\"ghost\"\r\n                            colorScheme=\"red\"\r\n                            onClick={() => {\r\n                                setPendingError(false)\r\n                                connector && tryActivation(connector)\r\n                            }}>\r\n                            Try Again\r\n                            </Button>\r\n                    </Alert>\r\n                ) : (\r\n                <Alert variant=\"left-accent\" status=\"warning\" mb={3} py={2} borderRadius=\"md\">\r\n                    <AlertIcon />\r\n                    Initializing...\r\n                    </Alert>\r\n                    )}\r\n            {\r\n                Object.keys(SUPPORTED_WALLETS).map(key => {\r\n                    const option = (SUPPORTED_WALLETS as any)[key]\r\n                    if (option.connector === connector) {\r\n                        if (option.connector === injected) {\r\n                            if (isMetamask && option.name !== 'MetaMask') {\r\n                                return null\r\n                            }\r\n                            if (!isMetamask && option.name === 'MetaMask') {\r\n                                return null\r\n                            }\r\n                        }\r\n                        return (\r\n                            <Option\r\n                                id={`connect-${key}`}\r\n                                key={key}\r\n                                clickable={false}\r\n                                header={option.name}\r\n                                subheader={option.description}\r\n                                icon={option.iconName} />\r\n                        )\r\n                    }\r\n                    return null\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\pages\\Templates.tsx",["385","386","387","388","389","390","391","392"],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\theme\\index.ts",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\theme\\colors.ts",[],"C:\\Users\\ME\\Documents\\Projets\\graphlinq\\GraphLinq.AppInterface\\src\\theme\\components\\tooltip.ts",[],{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","replacedBy":"396"},{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","severity":1,"message":"398","line":2,"column":66,"nodeType":"399","messageId":"400","endLine":2,"endColumn":69},{"ruleId":"397","severity":1,"message":"401","line":1,"column":17,"nodeType":"399","messageId":"400","endLine":1,"endColumn":25},{"ruleId":"397","severity":1,"message":"402","line":3,"column":28,"nodeType":"399","messageId":"400","endLine":3,"endColumn":36},{"ruleId":"403","severity":1,"message":"404","line":17,"column":6,"nodeType":"405","endLine":17,"endColumn":15,"suggestions":"406"},{"ruleId":"403","severity":1,"message":"407","line":36,"column":6,"nodeType":"405","endLine":36,"endColumn":24,"suggestions":"408"},{"ruleId":"409","severity":1,"message":"410","line":4,"column":1,"nodeType":"411","endLine":7,"endColumn":3},{"ruleId":"403","severity":1,"message":"412","line":29,"column":6,"nodeType":"405","endLine":29,"endColumn":30,"suggestions":"413"},{"ruleId":"414","severity":1,"message":"415","line":67,"column":40,"nodeType":"416","messageId":"417","endLine":67,"endColumn":61},{"ruleId":"418","severity":1,"message":"419","line":18,"column":49,"nodeType":"420","messageId":"421","endLine":18,"endColumn":52},{"ruleId":"397","severity":1,"message":"422","line":26,"column":7,"nodeType":"399","messageId":"400","endLine":26,"endColumn":12},{"ruleId":"418","severity":1,"message":"419","line":32,"column":47,"nodeType":"420","messageId":"421","endLine":32,"endColumn":50},{"ruleId":"397","severity":1,"message":"423","line":33,"column":22,"nodeType":"399","messageId":"400","endLine":33,"endColumn":31},{"ruleId":"397","severity":1,"message":"424","line":104,"column":10,"nodeType":"399","messageId":"400","endLine":104,"endColumn":20},{"ruleId":"418","severity":1,"message":"419","line":8,"column":65,"nodeType":"420","messageId":"421","endLine":8,"endColumn":68},{"ruleId":"397","severity":1,"message":"425","line":9,"column":7,"nodeType":"399","messageId":"400","endLine":9,"endColumn":31},{"ruleId":"397","severity":1,"message":"426","line":2,"column":55,"nodeType":"399","messageId":"400","endLine":2,"endColumn":65},{"ruleId":"397","severity":1,"message":"427","line":2,"column":67,"nodeType":"399","messageId":"400","endLine":2,"endColumn":71},{"ruleId":"397","severity":1,"message":"428","line":2,"column":73,"nodeType":"399","messageId":"400","endLine":2,"endColumn":89},{"ruleId":"397","severity":1,"message":"429","line":2,"column":91,"nodeType":"399","messageId":"400","endLine":2,"endColumn":100},{"ruleId":"397","severity":1,"message":"430","line":2,"column":119,"nodeType":"399","messageId":"400","endLine":2,"endColumn":124},{"ruleId":"397","severity":1,"message":"431","line":2,"column":189,"nodeType":"399","messageId":"400","endLine":2,"endColumn":200},{"ruleId":"397","severity":1,"message":"432","line":2,"column":216,"nodeType":"399","messageId":"400","endLine":2,"endColumn":225},{"ruleId":"397","severity":1,"message":"433","line":2,"column":239,"nodeType":"399","messageId":"400","endLine":2,"endColumn":244},{"ruleId":"397","severity":1,"message":"434","line":2,"column":246,"nodeType":"399","messageId":"400","endLine":2,"endColumn":249},{"ruleId":"397","severity":1,"message":"435","line":2,"column":251,"nodeType":"399","messageId":"400","endLine":2,"endColumn":258},{"ruleId":"397","severity":1,"message":"436","line":2,"column":260,"nodeType":"399","messageId":"400","endLine":2,"endColumn":268},{"ruleId":"397","severity":1,"message":"437","line":2,"column":270,"nodeType":"399","messageId":"400","endLine":2,"endColumn":279},{"ruleId":"397","severity":1,"message":"438","line":2,"column":281,"nodeType":"399","messageId":"400","endLine":2,"endColumn":285},{"ruleId":"397","severity":1,"message":"439","line":2,"column":317,"nodeType":"399","messageId":"400","endLine":2,"endColumn":321},{"ruleId":"397","severity":1,"message":"440","line":5,"column":10,"nodeType":"399","messageId":"400","endLine":5,"endColumn":27},{"ruleId":"397","severity":1,"message":"441","line":10,"column":10,"nodeType":"399","messageId":"400","endLine":10,"endColumn":16},{"ruleId":"442","severity":1,"message":"443","line":171,"column":128,"nodeType":"444","messageId":"445","endLine":171,"endColumn":208,"fix":"446"},{"ruleId":"447","severity":1,"message":"448","line":188,"column":32,"nodeType":"449","messageId":"450","endLine":188,"endColumn":34},{"ruleId":"447","severity":1,"message":"448","line":188,"column":53,"nodeType":"449","messageId":"450","endLine":188,"endColumn":55},{"ruleId":"397","severity":1,"message":"451","line":1,"column":10,"nodeType":"399","messageId":"400","endLine":1,"endColumn":13},{"ruleId":"397","severity":1,"message":"452","line":1,"column":15,"nodeType":"399","messageId":"400","endLine":1,"endColumn":21},{"ruleId":"397","severity":1,"message":"453","line":1,"column":23,"nodeType":"399","messageId":"400","endLine":1,"endColumn":34},{"ruleId":"397","severity":1,"message":"439","line":1,"column":36,"nodeType":"399","messageId":"400","endLine":1,"endColumn":40},{"ruleId":"397","severity":1,"message":"427","line":1,"column":42,"nodeType":"399","messageId":"400","endLine":1,"endColumn":46},{"ruleId":"397","severity":1,"message":"454","line":2,"column":10,"nodeType":"399","messageId":"400","endLine":2,"endColumn":25},{"ruleId":"397","severity":1,"message":"402","line":5,"column":28,"nodeType":"399","messageId":"400","endLine":5,"endColumn":36},{"ruleId":"397","severity":1,"message":"455","line":6,"column":10,"nodeType":"399","messageId":"400","endLine":6,"endColumn":33},{"ruleId":"418","severity":1,"message":"419","line":13,"column":59,"nodeType":"420","messageId":"421","endLine":13,"endColumn":62},{"ruleId":"403","severity":1,"message":"456","line":20,"column":8,"nodeType":"405","endLine":20,"endColumn":17,"suggestions":"457"},{"ruleId":"397","severity":1,"message":"458","line":1,"column":10,"nodeType":"399","messageId":"400","endLine":1,"endColumn":19},{"ruleId":"403","severity":1,"message":"412","line":29,"column":6,"nodeType":"405","endLine":29,"endColumn":25,"suggestions":"459"},{"ruleId":"397","severity":1,"message":"439","line":2,"column":18,"nodeType":"399","messageId":"400","endLine":2,"endColumn":22},{"ruleId":"397","severity":1,"message":"427","line":2,"column":24,"nodeType":"399","messageId":"400","endLine":2,"endColumn":28},{"ruleId":"397","severity":1,"message":"428","line":2,"column":37,"nodeType":"399","messageId":"400","endLine":2,"endColumn":53},{"ruleId":"397","severity":1,"message":"429","line":2,"column":55,"nodeType":"399","messageId":"400","endLine":2,"endColumn":64},{"ruleId":"397","severity":1,"message":"426","line":2,"column":66,"nodeType":"399","messageId":"400","endLine":2,"endColumn":76},{"ruleId":"397","severity":1,"message":"431","line":2,"column":128,"nodeType":"399","messageId":"400","endLine":2,"endColumn":139},{"ruleId":"397","severity":1,"message":"460","line":3,"column":10,"nodeType":"399","messageId":"400","endLine":3,"endColumn":24},{"ruleId":"397","severity":1,"message":"461","line":5,"column":10,"nodeType":"399","messageId":"400","endLine":5,"endColumn":27},{"ruleId":"418","severity":1,"message":"419","line":15,"column":59,"nodeType":"420","messageId":"421","endLine":15,"endColumn":62},{"ruleId":"442","severity":1,"message":"443","line":106,"column":64,"nodeType":"444","messageId":"445","endLine":106,"endColumn":128,"fix":"462"},{"ruleId":"397","severity":1,"message":"439","line":2,"column":18,"nodeType":"399","messageId":"400","endLine":2,"endColumn":22},{"ruleId":"397","severity":1,"message":"427","line":2,"column":24,"nodeType":"399","messageId":"400","endLine":2,"endColumn":28},{"ruleId":"397","severity":1,"message":"428","line":2,"column":37,"nodeType":"399","messageId":"400","endLine":2,"endColumn":53},{"ruleId":"397","severity":1,"message":"429","line":2,"column":55,"nodeType":"399","messageId":"400","endLine":2,"endColumn":64},{"ruleId":"397","severity":1,"message":"426","line":2,"column":66,"nodeType":"399","messageId":"400","endLine":2,"endColumn":76},{"ruleId":"397","severity":1,"message":"431","line":2,"column":128,"nodeType":"399","messageId":"400","endLine":2,"endColumn":139},{"ruleId":"397","severity":1,"message":"454","line":3,"column":10,"nodeType":"399","messageId":"400","endLine":3,"endColumn":25},{"ruleId":"418","severity":1,"message":"419","line":13,"column":61,"nodeType":"420","messageId":"421","endLine":13,"endColumn":64},{"ruleId":"442","severity":1,"message":"443","line":93,"column":62,"nodeType":"444","messageId":"445","endLine":93,"endColumn":126,"fix":"463"},{"ruleId":"397","severity":1,"message":"464","line":1,"column":16,"nodeType":"399","messageId":"400","endLine":1,"endColumn":25},{"ruleId":"397","severity":1,"message":"465","line":2,"column":15,"nodeType":"399","messageId":"400","endLine":2,"endColumn":23},{"ruleId":"397","severity":1,"message":"439","line":2,"column":25,"nodeType":"399","messageId":"400","endLine":2,"endColumn":29},{"ruleId":"397","severity":1,"message":"466","line":2,"column":31,"nodeType":"399","messageId":"400","endLine":2,"endColumn":35},{"ruleId":"397","severity":1,"message":"467","line":3,"column":10,"nodeType":"399","messageId":"400","endLine":3,"endColumn":16},{"ruleId":"397","severity":1,"message":"468","line":2,"column":23,"nodeType":"399","messageId":"400","endLine":2,"endColumn":32},{"ruleId":"397","severity":1,"message":"430","line":2,"column":34,"nodeType":"399","messageId":"400","endLine":2,"endColumn":39},{"ruleId":"397","severity":1,"message":"429","line":3,"column":17,"nodeType":"399","messageId":"400","endLine":3,"endColumn":26},{"ruleId":"397","severity":1,"message":"469","line":3,"column":28,"nodeType":"399","messageId":"400","endLine":3,"endColumn":32},{"ruleId":"397","severity":1,"message":"470","line":3,"column":34,"nodeType":"399","messageId":"400","endLine":3,"endColumn":41},{"ruleId":"397","severity":1,"message":"471","line":2,"column":10,"nodeType":"399","messageId":"400","endLine":2,"endColumn":23},{"ruleId":"397","severity":1,"message":"472","line":5,"column":8,"nodeType":"399","messageId":"400","endLine":5,"endColumn":20},{"ruleId":"397","severity":1,"message":"473","line":10,"column":10,"nodeType":"399","messageId":"400","endLine":10,"endColumn":27},{"ruleId":"414","severity":1,"message":"415","line":23,"column":20,"nodeType":"416","messageId":"417","endLine":23,"endColumn":43},{"ruleId":"397","severity":1,"message":"474","line":2,"column":15,"nodeType":"399","messageId":"400","endLine":2,"endColumn":20},{"ruleId":"397","severity":1,"message":"475","line":2,"column":22,"nodeType":"399","messageId":"400","endLine":2,"endColumn":27},{"ruleId":"397","severity":1,"message":"465","line":2,"column":29,"nodeType":"399","messageId":"400","endLine":2,"endColumn":37},{"ruleId":"397","severity":1,"message":"476","line":11,"column":20,"nodeType":"399","messageId":"400","endLine":11,"endColumn":29},{"ruleId":"397","severity":1,"message":"477","line":18,"column":18,"nodeType":"399","messageId":"400","endLine":18,"endColumn":25},{"ruleId":"403","severity":1,"message":"478","line":45,"column":8,"nodeType":"405","endLine":45,"endColumn":25,"suggestions":"479"},{"ruleId":"418","severity":1,"message":"419","line":17,"column":40,"nodeType":"420","messageId":"421","endLine":17,"endColumn":43},{"ruleId":"403","severity":1,"message":"480","line":48,"column":8,"nodeType":"405","endLine":48,"endColumn":17,"suggestions":"481"},{"ruleId":"482","severity":1,"message":"483","line":70,"column":32,"nodeType":"484","messageId":"421","endLine":70,"endColumn":34},{"ruleId":"418","severity":1,"message":"419","line":10,"column":36,"nodeType":"420","messageId":"421","endLine":10,"endColumn":38},{"ruleId":"485","severity":1,"message":"486","line":18,"column":25,"nodeType":"416","messageId":"487","endLine":18,"endColumn":42,"fix":"488"},{"ruleId":"403","severity":1,"message":"489","line":58,"column":8,"nodeType":"405","endLine":58,"endColumn":10,"suggestions":"490"},{"ruleId":"397","severity":1,"message":"431","line":2,"column":85,"nodeType":"399","messageId":"400","endLine":2,"endColumn":96},{"ruleId":"397","severity":1,"message":"491","line":2,"column":205,"nodeType":"399","messageId":"400","endLine":2,"endColumn":211},{"ruleId":"397","severity":1,"message":"492","line":2,"column":218,"nodeType":"399","messageId":"400","endLine":2,"endColumn":229},{"ruleId":"397","severity":1,"message":"493","line":2,"column":231,"nodeType":"399","messageId":"400","endLine":2,"endColumn":238},{"ruleId":"397","severity":1,"message":"494","line":2,"column":240,"nodeType":"399","messageId":"400","endLine":2,"endColumn":251},{"ruleId":"397","severity":1,"message":"495","line":3,"column":10,"nodeType":"399","messageId":"400","endLine":3,"endColumn":22},{"ruleId":"397","severity":1,"message":"496","line":10,"column":8,"nodeType":"399","messageId":"400","endLine":10,"endColumn":19},{"ruleId":"397","severity":1,"message":"497","line":11,"column":8,"nodeType":"399","messageId":"400","endLine":11,"endColumn":15},{"ruleId":"397","severity":1,"message":"498","line":29,"column":9,"nodeType":"399","messageId":"400","endLine":29,"endColumn":16},{"ruleId":"403","severity":1,"message":"499","line":89,"column":8,"nodeType":"405","endLine":89,"endColumn":16,"suggestions":"500"},{"ruleId":"397","severity":1,"message":"501","line":126,"column":15,"nodeType":"399","messageId":"400","endLine":126,"endColumn":30},{"ruleId":"397","severity":1,"message":"502","line":2,"column":10,"nodeType":"399","messageId":"400","endLine":2,"endColumn":15},{"ruleId":"397","severity":1,"message":"503","line":39,"column":56,"nodeType":"399","messageId":"400","endLine":39,"endColumn":63},{"ruleId":"397","severity":1,"message":"504","line":53,"column":9,"nodeType":"399","messageId":"400","endLine":53,"endColumn":26},{"ruleId":"397","severity":1,"message":"505","line":79,"column":15,"nodeType":"399","messageId":"400","endLine":79,"endColumn":25},{"ruleId":"403","severity":1,"message":"506","line":106,"column":6,"nodeType":"405","endLine":106,"endColumn":15,"suggestions":"507"},{"ruleId":"403","severity":1,"message":"508","line":108,"column":9,"nodeType":"509","endLine":111,"endColumn":4,"suggestions":"510"},{"ruleId":"403","severity":1,"message":"511","line":108,"column":9,"nodeType":"509","endLine":111,"endColumn":4,"suggestions":"512"},{"ruleId":"397","severity":1,"message":"451","line":1,"column":19,"nodeType":"399","messageId":"400","endLine":1,"endColumn":22},{"ruleId":"397","severity":1,"message":"427","line":2,"column":18,"nodeType":"399","messageId":"400","endLine":2,"endColumn":22},{"ruleId":"397","severity":1,"message":"451","line":2,"column":24,"nodeType":"399","messageId":"400","endLine":2,"endColumn":27},{"ruleId":"397","severity":1,"message":"513","line":2,"column":35,"nodeType":"399","messageId":"400","endLine":2,"endColumn":41},{"ruleId":"397","severity":1,"message":"514","line":2,"column":8,"nodeType":"399","messageId":"400","endLine":2,"endColumn":14},{"ruleId":"397","severity":1,"message":"515","line":3,"column":10,"nodeType":"399","messageId":"400","endLine":3,"endColumn":16},{"ruleId":"418","severity":1,"message":"419","line":14,"column":46,"nodeType":"420","messageId":"421","endLine":14,"endColumn":49},{"ruleId":"397","severity":1,"message":"516","line":16,"column":24,"nodeType":"399","messageId":"400","endLine":16,"endColumn":37},{"ruleId":"442","severity":1,"message":"443","line":86,"column":88,"nodeType":"444","messageId":"445","endLine":86,"endColumn":169,"fix":"517"},{"ruleId":"397","severity":1,"message":"518","line":161,"column":7,"nodeType":"399","messageId":"400","endLine":161,"endColumn":17},{"ruleId":"397","severity":1,"message":"519","line":166,"column":12,"nodeType":"399","messageId":"400","endLine":166,"endColumn":30},{"ruleId":"397","severity":1,"message":"520","line":168,"column":12,"nodeType":"399","messageId":"400","endLine":168,"endColumn":24},{"ruleId":"397","severity":1,"message":"521","line":168,"column":26,"nodeType":"399","messageId":"400","endLine":168,"endColumn":41},{"ruleId":"403","severity":1,"message":"522","line":188,"column":8,"nodeType":"405","endLine":188,"endColumn":10,"suggestions":"523"},"no-native-reassign",["524"],"no-negated-in-lhs",["525"],"@typescript-eslint/no-unused-vars","'bsc' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["526"],"React Hook useEffect has a missing dependency: 'refreshBalance'. Either include it or remove the dependency array.",["527"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["528"],"no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'pulse' is assigned a value but never used.","'connector' is assigned a value but never used.","'StatusIcon' is defined but never used.","'StyledIdenticonContainer' is assigned a value but never used.","'AlertTitle' is defined but never used.","'Text' is defined but never used.","'AlertDescription' is defined but never used.","'AlertIcon' is defined but never used.","'Input' is defined but never used.","'ModalHeader' is defined but never used.","'propNames' is defined but never used.","'Stack' is defined but never used.","'Tab' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.","'TabPanels' is defined but never used.","'Tabs' is defined but never used.","'Icon' is defined but never used.","'TemplateVariables' is defined but never used.","'FiEdit' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"529","text":"530"},"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'Box' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'FiArrowDownLeft' is defined but never used.","'UnsupportedChainIdError' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshBalanceContract'. Either include it or remove the dependency array.",["531"],"'AnyAction' is defined but never used.",["532"],"'FiArrowUpRight' is defined but never used.","'getDecimalsAmount' is defined but never used.",{"range":"533","text":"530"},{"range":"534","text":"530"},"'useEffect' is defined but never used.","'useRadio' is defined but never used.","'Flex' is defined but never used.","'FiFile' is defined but never used.","'FormLabel' is defined but never used.","'Grid' is defined but never used.","'Heading' is defined but never used.","'ErrorResponse' is defined but never used.","'AuthResponse' is defined but never used.","'GraphStateRequest' is defined but never used.","'Image' is defined but never used.","'Badge' is defined but never used.","'setAccess' is assigned a value but never used.","'setAddr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'contract'. Either include it or remove the dependency array.",["535"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["536"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","new-parens","Missing '()' invoking a constructor.","missing",{"range":"537","text":"538"},"React Hook useEffect has a missing dependency: 'applyCss'. Either include it or remove the dependency array.",["539"],"'Portal' is defined but never used.","'LinkOverlay' is defined but never used.","'LinkBox' is defined but never used.","'MenuDivider' is defined but never used.","'HiOutlineEye' is defined but never used.","'useInterval' is defined but never used.","'Cookies' is defined but never used.","'secDiff' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tickLogs'. Either include it or remove the dependency array.",["540"],"'result' is assigned a value but never used.","'Modal' is defined but never used.","'library' is assigned a value but never used.","'binanceWalletSign' is assigned a value but never used.","'firstChain' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activate', 'connector', 'dispatch', and 'history'. Either include them or remove the dependency array.",["541"],"The 'toggleWalletModal' function makes the dependencies of useEffect Hook (at line 118) change on every render. To fix this, wrap the definition of 'toggleWalletModal' in its own useCallback() Hook.","VariableDeclarator",["542"],"The 'toggleWalletModal' function makes the dependencies of useEffect Hook (at line 183) change on every render. To fix this, wrap the definition of 'toggleWalletModal' in its own useCallback() Hook.",["543"],"'Spacer' is defined but never used.","'styled' is defined but never used.","'darken' is defined but never used.","'setFileUpload' is assigned a value but never used.",{"range":"544","text":"530"},"'testDecomp' is assigned a value but never used.","'compressedTemplate' is assigned a value but never used.","'testTemplate' is assigned a value but never used.","'setTestTemplate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'decompTemplate?.nodes' and 'handleChange'. Either include them or remove the dependency array.",["545"],"no-global-assign","no-unsafe-negation",{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},[7660,7660]," rel=\"noreferrer\"",{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},[5320,5320],[4089,4089],{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},[593,593],"()",{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"566","fix":"567"},{"desc":"566","fix":"568"},[4024,4024],{"desc":"569","fix":"570"},"Update the dependencies array to be: [account, history]",{"range":"571","text":"572"},"Update the dependencies array to be: [chainId, account, refreshBalance]",{"range":"573","text":"574"},"Update the dependencies array to be: [account, dispatch, tokenContract]",{"range":"575","text":"576"},"Update the dependencies array to be: [account, refreshBalanceContract]",{"range":"577","text":"578"},"Update the dependencies array to be: [account, contract, dispatch]",{"range":"579","text":"580"},"Update the dependencies array to be: [account, access, contract]",{"range":"581","text":"582"},"Update the dependencies array to be: [account, dispatch]",{"range":"583","text":"584"},"Update the dependencies array to be: [applyCss]",{"range":"585","text":"586"},"Update the dependencies array to be: [inLogs, tickLogs]",{"range":"587","text":"588"},"Update the dependencies array to be: [account, activate, connector, dispatch, history]",{"range":"589","text":"590"},"Wrap the definition of 'toggleWalletModal' in its own useCallback() Hook.",{"range":"591","text":"592"},{"range":"593","text":"592"},"Update the dependencies array to be: [decompTemplate?.nodes, handleChange]",{"range":"594","text":"595"},[597,606],"[account, history]",[1388,1406],"[chainId, account, refreshBalance]",[991,1015],"[account, dispatch, tokenContract]",[707,716],"[account, refreshBalanceContract]",[1049,1068],"[account, contract, dispatch]",[1945,1962],"[account, access, contract]",[1531,1540],"[account, dispatch]",[2803,2805],"[applyCss]",[2900,2908],"[inLogs, tickLogs]",[3329,3338],"[account, activate, connector, dispatch, history]",[3371,3530],"useCallback(() => {\r\n    if (walletModalOpen) dispatch({ type: CLOSE_MODAL, name: \"walletManager\" });\r\n    else dispatch({ type: OPEN_MODAL, name: \"walletManager\" });\r\n  })",[3371,3530],[7407,7409],"[decompTemplate?.nodes, handleChange]"]