[{"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/index.tsx":"1","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/reportWebVitals.js":"2","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/App.tsx":"3","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/constants/index.tsx":"4","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/utils/getLibrary.tsx":"5","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/theme/index.ts":"6","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/store.ts":"7","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/routes/types.tsx":"8","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/web3/web3Manager.tsx":"9","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/containers/Layout.tsx":"10","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/hooks/index.tsx":"11","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/connectors/index.tsx":"12","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/theme/colors.ts":"13","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/theme/components/tooltip.ts":"14","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/reducers/index.ts":"15","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/sagas/modals.tsx":"16","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/hooks/useBalance.tsx":"17","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/containers/Main.tsx":"18","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/services/walletService.tsx":"19","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/pages/Auth.tsx":"20","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/pages/404.tsx":"21","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/connectors/networkConnector.tsx":"22","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/connectors/fortmatic.tsx":"23","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/Sidebar.tsx":"24","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/SuspenseSpinner.tsx":"25","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/Header/Header.tsx":"26","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/reducers/modals.ts":"27","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/reducers/diagrams.ts":"28","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/routes/index.tsx":"29","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/actions/index.ts":"30","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/hooks/useContract.tsx":"31","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/Header/identicon.tsx":"32","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/utils/index.tsx":"33","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/GraphCreation/GraphCreation.tsx":"34","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/ContractBalance/ContractCard.tsx":"35","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/constants/actions.ts":"36","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/mock/mocks.tsx":"37","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/pages/Presale.tsx":"38","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/pages/Graphs.tsx":"39","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/pages/Home.tsx":"40","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/assets/icons/index.tsx":"41","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/ContractBalance/ModalWithdraw.tsx":"42","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/hooks/useWalletContract.tsx":"43","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/services/graphService.tsx":"44","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/ContractBalance/ModalDeposit.tsx":"45","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/enums/graphState.tsx":"46","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/GraphCreation/TemplateFile.tsx":"47","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/GraphCreation/RadioCard.tsx":"48","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/GraphCreation/BlankCard.tsx":"49","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/GraphCreation/TemplateCard.tsx":"50","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/providers/manager.tsx":"51","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/Graphs/GraphCard.tsx":"52","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/Graphs/GraphStatus.tsx":"53","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/MotionBox.tsx":"54","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/routes/sidebar.tsx":"55","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/BrowserWallet/WalletManager.tsx":"56","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/BrowserWallet/PendingView.tsx":"57","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/BrowserWallet/Option.tsx":"58","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/hooks/usePrevious.tsx":"59"},{"size":1125,"mtime":1618961048475,"results":"60","hashOfConfig":"61"},{"size":362,"mtime":1618961048483,"results":"62","hashOfConfig":"61"},{"size":789,"mtime":1618961048453,"results":"63","hashOfConfig":"61"},{"size":1876,"mtime":1618961048463,"results":"64","hashOfConfig":"61"},{"size":218,"mtime":1618961048486,"results":"65","hashOfConfig":"61"},{"size":331,"mtime":1618761601805,"results":"66","hashOfConfig":"61"},{"size":646,"mtime":1618961048483,"results":"67","hashOfConfig":"61"},{"size":878,"mtime":1618961048484,"results":"68","hashOfConfig":"61"},{"size":1396,"mtime":1618961048486,"results":"69","hashOfConfig":"61"},{"size":1710,"mtime":1618961048463,"results":"70","hashOfConfig":"61"},{"size":2664,"mtime":1618961048474,"results":"71","hashOfConfig":"61"},{"size":2054,"mtime":1618961048463,"results":"72","hashOfConfig":"61"},{"size":1339,"mtime":1618761601804,"results":"73","hashOfConfig":"61"},{"size":183,"mtime":1618761601805,"results":"74","hashOfConfig":"61"},{"size":113,"mtime":1618961048482,"results":"75","hashOfConfig":"61"},{"size":560,"mtime":1618961048484,"results":"76","hashOfConfig":"61"},{"size":1029,"mtime":1618961048474,"results":"77","hashOfConfig":"61"},{"size":266,"mtime":1618961048464,"results":"78","hashOfConfig":"61"},{"size":2449,"mtime":1618961048484,"results":"79","hashOfConfig":"61"},{"size":1839,"mtime":1618961048477,"results":"80","hashOfConfig":"61"},{"size":541,"mtime":1619044758194,"results":"81","hashOfConfig":"61"},{"size":4366,"mtime":1618961048463,"results":"82","hashOfConfig":"61"},{"size":1357,"mtime":1618961048462,"results":"83","hashOfConfig":"61"},{"size":1492,"mtime":1618961048461,"results":"84","hashOfConfig":"61"},{"size":470,"mtime":1619050019095,"results":"85","hashOfConfig":"61"},{"size":4752,"mtime":1618961048461,"results":"86","hashOfConfig":"61"},{"size":1530,"mtime":1618961048483,"results":"87","hashOfConfig":"61"},{"size":426,"mtime":1618961048482,"results":"88","hashOfConfig":"61"},{"size":680,"mtime":1618961048483,"results":"89","hashOfConfig":"61"},{"size":599,"mtime":1618961048482,"results":"90","hashOfConfig":"61"},{"size":1366,"mtime":1618961048475,"results":"91","hashOfConfig":"61"},{"size":991,"mtime":1618961048461,"results":"92","hashOfConfig":"61"},{"size":3099,"mtime":1618961048486,"results":"93","hashOfConfig":"61"},{"size":30748,"mtime":1619042880881,"results":"94","hashOfConfig":"61"},{"size":1010,"mtime":1618961048458,"results":"95","hashOfConfig":"61"},{"size":135,"mtime":1618961048482,"results":"96","hashOfConfig":"61"},{"size":8254,"mtime":1618961048476,"results":"97","hashOfConfig":"61"},{"size":9255,"mtime":1619048044718,"results":"98","hashOfConfig":"61"},{"size":5153,"mtime":1619042966968,"results":"99","hashOfConfig":"61"},{"size":3348,"mtime":1619050050539,"results":"100","hashOfConfig":"61"},{"size":530,"mtime":1618961048454,"results":"101","hashOfConfig":"61"},{"size":5492,"mtime":1619051048152,"results":"102","hashOfConfig":"61"},{"size":1090,"mtime":1618961048475,"results":"103","hashOfConfig":"61"},{"size":5261,"mtime":1618961048484,"results":"104","hashOfConfig":"61"},{"size":6454,"mtime":1619051258931,"results":"105","hashOfConfig":"61"},{"size":135,"mtime":1618961048468,"results":"106","hashOfConfig":"61"},{"size":768,"mtime":1619041765755,"results":"107","hashOfConfig":"61"},{"size":1292,"mtime":1618961048459,"results":"108","hashOfConfig":"61"},{"size":1043,"mtime":1618961048459,"results":"109","hashOfConfig":"61"},{"size":1100,"mtime":1618961048460,"results":"110","hashOfConfig":"61"},{"size":10516,"mtime":1618961048478,"results":"111","hashOfConfig":"61"},{"size":9491,"mtime":1619044226446,"results":"112","hashOfConfig":"61"},{"size":2084,"mtime":1618961048460,"results":"113","hashOfConfig":"61"},{"size":124,"mtime":1618961048461,"results":"114","hashOfConfig":"61"},{"size":580,"mtime":1618961048483,"results":"115","hashOfConfig":"61"},{"size":10061,"mtime":1618961048458,"results":"116","hashOfConfig":"61"},{"size":2533,"mtime":1618961048458,"results":"117","hashOfConfig":"61"},{"size":831,"mtime":1618961048458,"results":"118","hashOfConfig":"61"},{"size":541,"mtime":1618961048475,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},"1yu3kvw",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"123"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"123"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"123"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"123"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"123"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"123"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"123"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"123"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"172","usedDeprecatedRules":"123"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"123"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"123"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"123"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"123"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"205","usedDeprecatedRules":"123"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"123"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"123"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"123"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"123"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"123"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"123"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"123"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"123"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"123"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"123"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"123"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"123"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/index.tsx",["268","269"],"import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createWeb3ReactRoot, Web3ReactProvider } from '@web3-react/core';\n\nimport { NetworkContextName } from './constants/index';\nimport getLibrary from './utils/getLibrary';\n\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\"\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName);\n\nif ('ethereum' in window) {\n  (window as any).ethereum.autoRefreshOnNetworkChange = false;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <Web3ProviderNetwork getLibrary={getLibrary}>\n          <ChakraProvider>\n            <App />\n          </ChakraProvider>\n        </Web3ProviderNetwork>\n      </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["270","271"],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/reportWebVitals.js",[],["272","273"],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/App.tsx",["274","275"],"import React, { lazy } from \"react\";\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { CustomRoute } from \"./routes/types\";\n\nimport { useActiveWeb3React } from \"./hooks/\";\nimport Web3ReactManager from \"./web3/web3Manager\";\nimport Auth from \"./pages/Auth\"\nimport Layout from \"./containers/Layout\"\n\nconst AppWrapper = () => {\n\n  useActiveWeb3React();\n\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n};\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n        <Web3ReactManager>\n          <Switch>\n            <CustomRoute path=\"/\" component={Layout} />\n          </Switch>\n        </Web3ReactManager>\n    </Router>\n  );\n};\n\nexport default AppWrapper;\n","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/constants/index.tsx",["276"],"\nimport { fortmatic, injected, portis, walletconnect, walletlink, bsc } from '../connectors/index'\n\nexport const SUPPORTED_WALLETS = {\n    INJECTED: {\n      connector: injected,\n      name: 'Injected',\n      iconName: 'MetaMaskIcon',\n      description: 'Injected web3 provider.',\n      href: null,\n      primary: true\n    },\n    // BINANCE: {\n    //   connector: bsc,\n    //   name: 'Binance Chain Wallet',\n    //   iconName: 'BinanceIcon',\n    //   description: 'A Crypto Wallet for Binance Chain, Binance Smart Chain and Ethereum',\n    //   href: null,\n    // },\n    METAMASK: {\n      connector: injected,\n      name: 'MetaMask',\n      iconName: 'MetaMaskIcon',\n      description: 'Easy-to-use browser extension.',\n      href: null,\n    },\n    WALLET_CONNECT: {\n      connector: walletconnect,\n      name: 'WalletConnect',\n      iconName: 'WalletConnectIcon',\n      description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\n      href: null,\n      mobile: true\n    },\n    WALLET_LINK: {\n      connector: walletlink,\n      name: 'Coinbase Wallet',\n      iconName: 'CoinbaseWalletIcon',\n      description: 'Use Coinbase Wallet app on mobile device',\n      href: null,\n    },\n    COINBASE_LINK: {\n      name: 'Open in Coinbase Wallet',\n      iconName: 'CoinbaseWalletIcon',\n      description: 'Open in Coinbase Wallet app.',\n      href: 'https://go.cb-w.com/mtUDhEZPy1',\n      mobile: true,\n      mobileOnly: true\n    },\n    FORTMATIC: {\n      connector: fortmatic,\n      name: 'Fortmatic',\n      iconName: 'FortmaticIcon',\n      description: 'Login using Fortmatic hosted wallet',\n      href: null,\n      mobile: true\n    },\n    Portis: {\n      connector: portis,\n      name: 'Portis',\n      iconName: 'PortisIcon',\n      description: 'Login using Portis hosted wallet',\n      href: null,\n      mobile: true\n    }\n  }\n  \n  export const NetworkContextName = 'NETWORK'","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/utils/getLibrary.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/theme/index.ts",[],["277","278"],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/store.ts",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/routes/types.tsx",["279","280","281"],"import { Route, Redirect } from \"react-router-dom\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport React, { useEffect, useState } from \"react\";\nimport WalletService from \"../services/walletService\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthComponent from \"../pages/Auth\"\n\nexport const CustomRoute = ({ component, ...rest }: any) => {\n  const { account } = useWeb3React();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!account) { return }\n    if (!WalletService.verifySessionIntegrity(account)) {\n      return history.push(\"/\");\n    }\n  }, [account])\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        account === undefined || localStorage.getItem(\"session\") == null ? (\n          React.createElement(AuthComponent, props)\n        ) : (\n          React.createElement(component, props)\n        )\n      }\n    />\n  );\n};","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/web3/web3Manager.tsx",["282"],"import { useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { network } from \"../connectors\";\nimport { useEagerConnect, useInactiveListener } from \"../hooks\";\n// import { useHornBalance } from 'src/hooks/useHornBalance'\nimport { useBalance } from \"../hooks/useBalance\";\n\nimport { NetworkContextName } from \"../constants\";\n\nexport default function Web3ReactManager({ children }: any) {\n  const { active, chainId, account } = useWeb3React();\n  const {\n    active: networkActive,\n    error: networkError,\n    activate: activateNetwork,\n  } = useWeb3React(NetworkContextName);\n  const { refreshBalance }: any = useBalance();\n\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\n  useEffect(() => {\n    if (triedEager && !networkActive && !networkError && !active) {\n      activateNetwork(network);\n    }\n  }, [triedEager, networkActive, networkError, activateNetwork, active]);\n\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  useInactiveListener(!triedEager);\n\n  useEffect(() => {\n    // setting account and refreshing glq balance\n    refreshBalance();\n  }, [chainId, account]);\n\n  return children;\n}\n","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/containers/Layout.tsx",["283"],"import React, { Suspense } from 'react'\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { Flex, Box } from '@chakra-ui/react';\nimport { Header } from '../components/Header/Header';\nimport { Sidebar } from '../components/Sidebar';\nimport { Main } from './Main';\n\nimport routes from '../routes';\nimport Page404 from '../pages/404';\nimport { SuspenseSpinner } from '../components/SuspenseSpinner';\n\ninterface LayoutProps {\n\n}\n\nconst Layout: React.FC<LayoutProps> = ({ }) => {\n    return (\n        <Flex minH=\"100vh\" h=\"100vh\" bgColor=\"gray.50\">\n            <Sidebar />\n            <Box as=\"section\" display=\"flex\" flexDirection=\"column\" flex=\"1\" width=\"full\">\n                <Header />\n                <Main>\n                    <Suspense fallback={<SuspenseSpinner />}>\n                        <Switch>\n                            {routes.map((route, i) => {\n                                return route.component ? (\n                                    <Route\n                                        key={i}\n                                        exact={true}\n                                        path={`/app${route.path}`}\n                                        render={(props) => <route.component {...props} />}\n                                    />\n                                ) : null\n                            })}\n                            <Redirect exact from=\"/\" to=\"/app/home\" />\n                            <Redirect exact from=\"/app\" to=\"/app/home\" />\n                            <Route component={Page404} />\n                        </Switch>\n                    </Suspense>\n                </Main>\n            </Box>\n        </Flex>\n    );\n}\n\nexport default Layout;","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/hooks/index.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/connectors/index.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/theme/colors.ts",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/theme/components/tooltip.ts",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/reducers/index.ts",["284"],"import {diagrams} from './diagrams';\nimport {modals} from './modals';\n\nexport default {\n  modals,\n  diagrams,\n};\n","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/sagas/modals.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/hooks/useBalance.tsx",["285"],"import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { utils } from 'ethers';\nimport { UPDATE_BALANCE } from '../redux/actions/index';\nimport { useActiveWeb3React } from '.';\nimport { useTokenContract } from './useContract';\n\nexport function useBalance() {\n  const { account } = useActiveWeb3React()\n\n  const dispatch = useDispatch();\n  \n  const balance = useSelector(state => (state as any).modals.balance);\n\n  const tokenContract = useTokenContract(process.env.REACT_APP_GRAPHLINQ_TOKEN_CONTRACT);\n\n  const refreshBalance = useCallback(async () => {\n      if (!account || !tokenContract) {\n        return;\n      }\n      try {\n      const balanceOf = await tokenContract.balanceOf(account);\n      if (!balanceOf) return;\n  \n      const balance = parseFloat(utils.formatUnits(balanceOf, 18));\n      dispatch({ type: UPDATE_BALANCE, payload: {balance}, name: 'balance'});\n      } catch (e) { console.error(e) }\n\n  }, [account, tokenContract]);\n\n return { balance, refreshBalance }\n}\n","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/containers/Main.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/services/walletService.tsx",["286"],"import ManagerProvider from \"../providers/manager\"\nimport AuthResponse from \"../providers/responses/auth\"\nimport { WalletBalanceResponse } from \"../providers/responses/balance\";\nimport { ResponseSuccess } from \"../providers/responses/success\";\n\n\nexport default class WalletService {\n    public static async authWallet(addr: string, sign: string): Promise<boolean>\n    {\n        try\n        {\n            const result: AuthResponse = await ManagerProvider.authRequest({\n                address: addr,\n                signature: sign\n            })\n        \n            if (result) {\n                localStorage.setItem('session', JSON.stringify({token: result.accessToken, addr: addr}))\n            }\n            return result.auth;\n        }\n        catch (error)\n        {\n            console.error(error)\n            return false;\n        }\n    }\n\n    public static verifySessionIntegrity(currAcc: string): boolean {\n        if (localStorage.getItem(\"session\") != null) {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            if (session.addr !== currAcc) { \n              localStorage.removeItem('session')\n              return false;\n            }\n          }\n        else if (localStorage.getItem(\"session\") == null) { return false; }\n        \n        return true;\n    }\n\n    public static async getBalance(addr: string): Promise<WalletBalanceResponse | undefined> {\n        try\n        {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            const result: WalletBalanceResponse = await ManagerProvider.fetchBalanceWallet({address: addr}, session.token)\n            return result\n        }\n        catch (error)\n        {\n            console.error(error)\n            return undefined;\n        }\n    }\n\n\n    public static async withdraw(amount: number): Promise<ResponseSuccess | String > {\n        try\n        {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            const result: ResponseSuccess = await ManagerProvider.withdrawBalanceWallet({amount}, session.token)\n            return result\n        }\n        catch (error)\n        {\n            if (!error.success) {\n                var errorMsg: String = new String(error.msg)\n                return errorMsg\n            }\n            console.error(JSON.stringify(error))\n            return \"An internal server error occured, please try again later\";\n        }\n    }\n\n\n}","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/pages/Auth.tsx",["287","288","289","290","291","292","293","294"],"import React from 'react'\nimport { Heading, Text, Box, Button, Tabs, TabList, Tab, TabPanels, TabPanel, Spacer, Image, Center, Icon } from '@chakra-ui/react';\nimport GLQLogo from \"../assets/logo.svg\"\nimport WalletManager from \"../components/BrowserWallet/WalletManager\"\n\ninterface AuthProps {\n\n}\n\nconst Auth: React.FC<AuthProps> = ({ }) => {\n    return (\n        <Box id=\"auth\">\n            <div className=\"auth-h\">\n                <Image src={GLQLogo}/>\n            </div>\n            <div className=\"auth-c\">\n                <div className=\"top\">\n                    <h2>Dashboard Access</h2>\n                    <p>Connect your wallet to access your dashboard.</p>\n                </div>\n                <Tabs className=\"tab\">\n                    <TabList className=\"tabt\">\n                        <Tab><span>Browser Extension</span></Tab>\n                        <Tab isDisabled><span>Wallet Direct</span></Tab>\n                        <Tab isDisabled><span>Ledger USB</span></Tab>\n                    </TabList>\n                    <TabPanels className=\"tabp\">\n                        <TabPanel>\n                            <div className=\"ls-c\">\n                                <WalletManager />\n                            </div>\n                        </TabPanel>\n                        <TabPanel>\n                            <p>Wallet Direct component</p>\n                        </TabPanel>\n                        <TabPanel>\n                            <p>Ledger USB component</p>\n                        </TabPanel>\n                    </TabPanels>\n                </Tabs>\n            </div>\n            <div className=\"auth-f\">\n                New to GraphLinq Wallet ?\n                <a target=\"_blank\" href=\"https://docs.graphlinq.io/wallet\">Learn more</a>\n            </div>\n        </Box>\n    );\n}\n\nexport default Auth;","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/pages/404.tsx",["295","296","297","298","299"],"import { Alert, Grid, Heading, Link } from '@chakra-ui/react';\nimport React from 'react'\n\ninterface Page404Props {\n\n}\n\nconst Page404: React.FC<Page404Props> = ({}) => {\n        return (\n            <>\n                <h1>Error 404</h1>\n                <Alert status=\"info\">\n                    <i className=\"fal fa-times-circle\"></i> Sorry, page not found.\n                </Alert>\n                <br />\n                <a className=\"bt\">Back to home <i className=\"fal fa-home\"></i></a>\n            </>\n        );\n}\n\nexport default Page404;","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/connectors/networkConnector.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/connectors/fortmatic.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/Sidebar.tsx",["300","301","302","303","304","305","306"],"import React from 'react'\nimport { Box, VStack, Icon, Link, Button, Text, Image, Divider, Flex } from '@chakra-ui/react';\nimport { NavLink, Route } from 'react-router-dom';\nimport routes from '../routes/sidebar'\nimport * as Icons from 'react-icons/hi'\nimport GLQLogo from \"../assets/logo.svg\"\nimport { ContractCard } from './ContractBalance/ContractCard';\n\ninterface SidebarProps {\n\n}\n\nconst IconSidebar = ({ icon, ...props }: any) => {\n    const iconName = (Icons as any)[icon]\n    return <Icon as={iconName} {...props} />\n}\n\nexport const Sidebar: React.FC<SidebarProps> = ({ }) => {\n    return (\n        <aside id=\"a\">\n            <div className=\"lo\">\n               <Image src={GLQLogo}/>\n            </div>\n            <ContractCard />\n            <nav id=\"n\">\n                <ul>\n                    {routes.map((route: any) => (\n                        <li>\n                            <Link\n                                as={NavLink}\n                                exact\n                                to={route.path}\n                                _activeLink={{className:'active'}}\n                            >\n                                <Route path={route.path} exact={route.exact}></Route>\n                                <IconSidebar icon={route.icon} w={4} h={4} />\n                                {route.name}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n        </aside>\n    );\n}","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/SuspenseSpinner.tsx",["307","308","309"],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/Header/Header.tsx",["310","311","312","313","314","315","316","317","318","319","320","321","322"],"import React from 'react'\nimport { Flex, Spacer, Box, Avatar, Tag, TagLabel, Icon, IconButton, Menu, MenuButton, MenuItem, MenuList, Portal, Link, Button, keyframes } from '@chakra-ui/react';\n\nimport { WalletConnectIcon, CoinbaseWalletIcon, FortmaticIcon, PortisIcon } from \"../../assets/icons\";\nimport Identicon from \"./identicon\";\n\nimport {\n    fortmatic,\n    injected,\n    portis,\n    walletconnect,\n    walletlink,\n} from \"../../connectors\";\n\nimport { shortenAddress } from \"../../utils/index\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useSelector } from \"react-redux\";\nimport { HiOutlineDatabase, HiOutlineDotsHorizontal } from 'react-icons/hi';\nimport { FiGithub, FiMessageCircle, FiMessageSquare, FiBookOpen, FiExternalLink } from \"react-icons/fi\";\nimport { GraphStateEnum } from '../../enums/graphState';\nimport { NavLink } from 'react-router-dom';\nimport { GraphCreation } from '../GraphCreation/GraphCreation';\n\ninterface HeaderProps {\n\n}\n\nconst pulse = keyframes({\n    \"0%\": { transform: \"scale(0.95)\", boxShadow: \"0 0 0 0 rgba(139, 92, 246, 0.7)\" },\n    \"70%\": { transform: \"scale(1)\", boxShadow: \"0 0 0 10px rgba(139, 92, 246, 0)\" },\n    \"100%\": { transform: \"scale(0.95)\", boxShadow: \"0 0 0 0 rgba(139, 92, 246, 0)\" }\n})\n\nexport const Header: React.FC<HeaderProps> = ({ }) => {\n    const { account, connector } = useWeb3React();\n    let amountBalance = useSelector((state: any) => state.modals.balance.amount);\n    return (\n        <header id=\"h\">\n            <div className=\"l\">\n                <GraphCreation className=\"bt btm\">\n                    Make a Graph <i className=\"fal fa-plus-circle\"></i>\n                </GraphCreation>\n            </div>  \n            <div className=\"r\">\n                {account !== undefined && (\n                    <div className=\"rt\">\n                        <Button\n                        as={NavLink}\n                        exact\n                        to=\"private-sale\"\n                        className=\"bt\"\n                        >\n                            Private Sale\n                            <i className=\"fal fa-database\"></i>\n                        </Button>\n                        <div className=\"gl in\">{amountBalance} GLQ</div>\n                        <div className=\"ad in\">\n                            {shortenAddress(account)}\n                        </div>\n                    </div>\n                )}\n                <Menu>\n                    <MenuButton\n                        as={IconButton}\n                        aria-label=\"Links\"\n                        icon={<Icon as={HiOutlineDotsHorizontal} w={5} h={5} />}\n                        className=\"mn\"\n                    />\n                    <MenuList className=\"mnv\">\n                        <MenuItem as={Link} icon={<FiBookOpen />} href=\"https://docs.graphlinq.io/\" isExternal>\n                            Documentation\n                        </MenuItem>\n                        <MenuItem as={Link} icon={<FiMessageCircle />} href=\"https://discord.gg/k3tqWzub\" isExternal>\n                            Discord\n                        </MenuItem>\n                        <MenuItem as={Link} icon={<FiMessageSquare />} href=\"https://t.me/graphlinq\" isExternal>\n                            Telegram\n                        </MenuItem>\n                        <MenuItem as={Link} icon={<FiGithub />} href=\"https://github.com/GraphLinq/GraphLinq\" isExternal>\n                            Github\n                        </MenuItem>\n                    </MenuList>\n                </Menu>\n            </div>\n        </header>\n    );\n}\n\n// eslint-disable-next-line react/prop-types\nfunction StatusIcon({ connector }: any) {\n    if (connector === injected) {\n        return <Identicon />;\n    }\n    if (connector === walletconnect) {\n        return (\n            <Avatar\n                bgColor=\"white\"\n                as={WalletConnectIcon}\n                size=\"xs\"\n                ml={-2}\n                mr={2}\n            />\n        );\n    }\n    if (connector === walletlink) {\n        return (\n            <Avatar\n                bgColor=\"white\"\n                as={CoinbaseWalletIcon}\n                size=\"xs\"\n                ml={-2}\n                mr={2}\n            />\n\n        );\n    }\n    if (connector === fortmatic) {\n        return (\n            <Avatar\n                bgColor=\"white\"\n                as={FortmaticIcon}\n                size=\"xs\"\n                ml={-2}\n                mr={2}\n            />\n        );\n    }\n    if (connector === portis) {\n        return (\n            <Avatar\n                bgColor=\"white\"\n                as={PortisIcon}\n                size=\"xs\"\n                ml={-2}\n                mr={2}\n            />\n        );\n    }\n    return null;\n}","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/reducers/modals.ts",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/reducers/diagrams.ts",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/routes/index.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/actions/index.ts",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/hooks/useContract.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/Header/identicon.tsx",["323"],"import React, { useEffect, useRef } from 'react';\nimport { Avatar, forwardRef, AvatarProps } from '@chakra-ui/react';\n\nimport styled from 'styled-components';\n\nimport Jazzicon from 'jazzicon';\nimport { useActiveWeb3React } from '../../hooks';\n\nconst StyledIdenticonContainer = styled.div`\n  margin:auto;\n  height: 1rem;\n  width: 1rem;\n  border-radius: 1.125rem;\n  background-color: #CED0D9;\n`\n\nexport default function Identicon() {\n  const ref = useRef()\n\n  const { account } = useActiveWeb3React()\n\n  useEffect(() => {\n    if (account && ref.current) {\n      (ref as any).current.innerHTML = ''\n      const jazzicon = (ref as any).current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)))\n      jazzicon.style.display = 'block';\n    }\n  }, [account])\n\n  return (\n    <JazzAvatar ref={ref as any} />\n  )\n}\n\nconst JazzAvatar = forwardRef<AvatarProps, \"div\">((props, ref) => (\n  <Avatar\n    bgColor=\"white\"\n    size=\"xs\"\n    ml={-2}\n    mr={2}\n    ref={ref}\n    {...props}\n  />\n))\n","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/utils/index.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/GraphCreation/GraphCreation.tsx",["324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343"],"import React, { useState, useEffect } from 'react'\nimport { Box, Button, Editable, EditableInput, Alert, AlertTitle, Text, AlertDescription, AlertIcon, EditablePreview, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, propNames, SimpleGrid, Stack, Tab, TabList, TabPanel, TabPanels, Tabs, useDisclosure, useRadioGroup, Icon, Flex } from '@chakra-ui/react';\nimport { TemplateCard } from './TemplateCard';\nimport { BlankCard } from './BlankCard';\nimport { TemplateVariables } from './TemplateVariables';\nimport { RadioCard } from './RadioCard';\nimport { TemplateFile } from './TemplateFile';\nimport GraphService from '../../services/graphService';\nimport { GraphStateEnum } from '../../enums/graphState';\nimport { FiEdit } from 'react-icons/fi';\nimport Cookies from 'js-cookie'\nimport { GraphTemplate } from '../../providers/responses/templateGraph';\n\ninterface GraphCreationProps {\n\n}\n\nexport const GraphCreation = (props: any) => {\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const [fileUpload, setFileUpload] = useState({ loaded: false, file: {} })\n    const [graphName, setGraphName] = useState(\"Unnamed Graph\")\n    const [template, selectedTemplate] = useState({ loaded: false, template: {bytes: \"\", idgraphsTemplates: 0} })\n\n    const inputFileRef = React.createRef()\n    const [templates, setTemplates] = useState<GraphTemplate[]>([])\n    // const templates = [\n    //     {\n    //         imageUrl: \"https://via.placeholder.com/200x100.png\",\n    //         imageAlt: \"Watch over bitcoin price on Coingecko\",\n    //         templateTitle: \"Watcher Coingecko Bitcoin Price\",\n    //         radioValue: \"watcher-coingecko-btc-price\",\n    //         bytes: \"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\"\n    //     },\n    //     {\n    //         imageUrl: \"https://via.placeholder.com/200x100.png\",\n    //         imageAlt: \"Watch ethereum gas price in real time\",\n    //         templateTitle: \"Watcher Gas price From Ethereum Chain\",\n    //         radioValue: \"watcher-eth-gas-fees\",\n    //         bytes: \"\"\n    //     },\n    //     {\n    //         imageUrl: \"https://via.placeholder.com/200x100.png\",\n    //         imageAlt: \"Watch events from every new blocks received on the Ethereum Chain\",\n    //         templateTitle: \"Watch New Ethereum Blocks\",\n    //         radioValue: \"watcher-eth-new-blocks\",\n    //         bytes: \"Fg8AAB+LCAAAAAAAAAPcVtuO2zYQ/RVDz6ZBSqRIGtiXboIWaJA1mk1eisAYksONEFkOdNnGCPrvHdnyZddxoqR5yAYGDIu0yJkz55yZT0kFK0zmyU01eYn/TH4r1/59k0yTah2wSeZ/f0qKQNuAOkStUya94ExqpZjtH6PBLEofszTL6a1286E/7Hn77npdVejbYl3R8rprl/2BybzqynKaeKiWDpf4EX3XIp0foWxwtz4sJvO27mgp1gVWodwshzjpaKyxW02GC9Y1ne/6qJfD5f5kY/kxmQth6ccmmedymhTV8gPUdFSL9Ul6GNNUBi6YyjgymfGMGZVnTCMGQ5vcq9CDsouhq8tjrq82TYur2au2Lqq76WR4XNTFPbQ4u17X+KJw08kbuo/AuJIz3n+mk+uubLsaryrs2hrK6WTRubLwf+Lmdv0eqyvt0RsVtEPQ2hqkG++h7A4YQtMUd9UKq5aCSE6fB6iT/RvLolnWGAm2yuOA9b/TIXOdGpciB+ZAUHW58AxEDoxnFqUHJW1qj5k3hDO2r3+B/N/uWPk5MvDceA8BmPL0JbUnrhvrmAwpFxacC+4EEn9K9AGTlxTAVkmzRdndFdVsz9pZv9PMHuhjOrn49yNsYixsPTg/GqoDWSSILA0ERaYFIaNIMFQZxYRAUNGkItfhiMJNRY6yzev5Pd3VZ/nACxIRorEEKRM8EvcyC8xYUAwyLjHaTAXVm8r/cAtytYNhbCN5bBbYRzYYhcz5ziiMvWgUgexABYHMWshJLpYzJzgnozCGbMPmHMyXufFT6GUkxc+JMrIPfJfuUkhzH4RjGDNBdICMOe09U6kX0hoXjfZHbN1Qzr3kcC+xvxbXvYBmz25vmtm26KSw090juNnMjAPX6NyAslKbHBzIH25GB4VFh8Gi54x6TiSF9YXJ0TLNIQad5RSHPCb9O7bbBG9rqBrYEm1xAPZMb9/Qe4e1x3Ki+3Yymhyveayo2FV7xveiyu3QfYXJL6qKFBVchlRq6SSxymnmXCqZ8GQRyCWBYp5C5Ucy+JwdI431u2QVwZC/5hSUIlwl5oaBd56FmLqIOc9QwxHcO2heNxjO/OoZ+mLV4/NUGvz0MLkGB15LxsETtNw4GnAsMqqnttoCSmUfpP+iWBXtr5O/7hls8sCCBN53LOKkolEvKim1CDyk1j3S1h/QvHv6ABxNdeScMeRLiX1mWLlgnruxY8Qksj31K14puFQ7s5T8oleCySJQp2UAvVcC0MCOJGxOJgWKK+7EiZxX2DRwhz/Z+DGSk+cFH9kev80n3/arfr3qL9o9/wcAAP//AwB9nA4pFg8AAA==\"\n    //     },\n    //     {\n    //         imageUrl: \"https://via.placeholder.com/200x100.png\",\n    //         imageAlt: \"Watch over a pair on pancake and get notified on new swaps\",\n    //         templateTitle: \"Pancake Swap Pair Watcher\",\n    //         radioValue: \"watcher-pancake-pair-watcher\",\n    //         bytes: \"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\"\n    //     },\n    //     {\n    //         imageUrl: \"https://via.placeholder.com/200x100.png\",\n    //         imageAlt: \"Watch new deposit on UniCrypt platform\",\n    //         templateTitle: \"Watch Unicrypt New Deposit\",\n    //         radioValue: \"watcher-unicrypt-new-deposit\",\n    //         bytes: \"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\"\n    //     },\n    // ];\n\n    useEffect(() => {\n        const fetchTemplates = async () => {\n            const templates: GraphTemplate[] = await GraphService.listGraphsTemplates()\n            setTemplates(templates)\n        }\n        fetchTemplates()\n    }, [])\n\n    const { getRootProps, getRadioProps } = useRadioGroup({\n        name: \"template\",\n        defaultValue: \"blank\",\n        onChange: (e) => {\n            const template = templates.find(x => x.key === e)\n            if (template !== undefined) {\n                selectedTemplate({ loaded: true, template: template })\n            }\n        },\n    })\n\n    const group = getRootProps()\n\n    const [step, setStep] = useState(true);\n    const [error, setError] = useState(\"\");\n    const [success, setSuccess] = useState(\"\");\n\n    async function onFileChange(e: any) {\n        console.log(e.target.files[0])\n        setFileUpload({ loaded: true, file: e.target.files[0] })\n        setGraphName(e.target.files[0].name.toUpperCase().split('.GLQ')[0])\n    }\n\n    function resetEntry() {\n        selectedTemplate({ loaded: false, template: {bytes: \"\", idgraphsTemplates: 0} })\n        setFileUpload({ loaded: false, file: {} })\n        setStep(true)\n    }\n\n    function onInputClick(event: React.MouseEvent<HTMLInputElement, MouseEvent>) {\n        const element = event.target as HTMLInputElement\n        element.value = ''\n    }\n\n    function readFileDataAsBase64(file: File) {\n\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = (event: any) => {\n                resolve(event.target.result);\n            };\n\n            reader.onerror = (err) => {\n                reject(err);\n            };\n\n            reader.readAsBinaryString(file);\n        });\n    }\n\n    async function deployFileGraph(file: File) {\n        try {\n            const data: any = await readFileDataAsBase64(file)\n            const result: String | undefined = await GraphService.deployGraph({\n                state: GraphStateEnum.Starting,\n                bytes: data,\n                alias: graphName,\n                hash: undefined\n            })\n\n            if (result instanceof String) {\n                setSuccess(`${result}`)\n            } else {\n                setError('Your graph file was incomplete or invalid, please check it on the IDE')\n            }\n        }\n        catch (e) {\n            console.error(e)\n            setError('An error occured while trying to parse your file, please try again')\n        }\n    }\n\n\n    function updateStep() {\n        if (!step && fileUpload.loaded) {\n            deployFileGraph(fileUpload.file as File)\n            return\n        }\n        setStep(!step)\n    }\n\n    return (\n        <>\n            <button onClick={onOpen} {...props}>{props.children}</button>\n            <Modal isOpen={isOpen} onClose={onClose} size=\"2xl\" scrollBehavior=\"inside\">\n                <ModalOverlay className=\"ov\" />\n                <ModalContent className=\"mod mod-cre\">\n                    <header>\n                        {step ?\n                            <Flex className=\"fd in fal fa-pencil\">\n                                <Editable defaultValue={graphName} w=\"lg\">\n                                    <EditablePreview />\n                                    <EditableInput value={graphName} onChange={(e) => { setGraphName(e.target.value) }} />\n                                </Editable>\n                            </Flex>\n                            :\n                            <Box>\n                                Settings Deployment\n                            </Box>\n                        }\n                    </header>\n                    <ModalCloseButton className=\"clo\" />\n                    <ModalBody>\n                        {success &&\n                            <Alert status=\"success\">\n                                <i className=\"fal fa-check-circle\"></i> \n                                <p>Graph Successfully started, Congratulations!</p>\n                                <p><small> {graphName} execution unique hash : {success}</small></p>\n                            </Alert>\n                        }\n                        {error &&\n                            <Alert style={{ marginBottom: \"15px\", marginTop: \"15px\" }} status=\"error\">\n                                <i className=\"fal fa-times-circle\"></i> \n                                <p>{error}</p>\n                            </Alert>\n                        }\n                        {step &&\n                            <SimpleGrid className=\"ls-g\" {...group}>\n                                <RadioCard className=\"lg\" clickable={true} key=\"blank\" {...getRadioProps({ value: \"blank\" })}>\n                                    <div onClick={() => { window.open(\"https://ide.graphlinq.io\", \"_blank\") }}><BlankCard /></div>\n                                </RadioCard>\n                                {templates.map((template) => {\n                                    const radio = getRadioProps({ value: template.key })\n                                    return (\n                                        <RadioCard clickable={false} fileLoaded={fileUpload.loaded} key={template.key} {...radio}>\n                                            <TemplateCard TemplateImageUrl={\"none\"} TemplateImageAlt={template.description} TemplateTitle={template.title} />\n                                        </RadioCard>\n                                    )\n                                })}\n                            </SimpleGrid>}\n                        {/* {!step && !fileUpload.loaded &&\n                            <TemplateVariables />} */}\n\n                        {!step && fileUpload.loaded &&\n                            <TemplateFile name={graphName} file={fileUpload.file as any} />}\n                        <Alert status=\"info\">\n                            <i className=\"fal fa-info-circle\"></i> \n                            <p>Template system are still in development, you can import a GLQ file generated directly from our <a style={{ color: '#3907ff' }} target=\"_blank\" href=\"https://ide.graphlinq.io\">IDE</a> (File -&gt; Save Graph). </p>\n                        </Alert>\n\n                    </ModalBody>\n                    <ModalFooter className=\"fot\">\n                        {fileUpload.loaded &&\n                            <Box className=\"inf\">\n                                <p>Graph file uploaded successfully: size of <b>{(fileUpload.file as any).size} bytes</b> (name: {(fileUpload.file as any).name})</p>\n                            </Box>\n                        }\n                        {!fileUpload.loaded && template.loaded &&\n                            <Box className=\"inf\">\n                                <p><b>{(template.template as any).title}</b> selected, go to IDE to setup variables and deploy the graph here by importing the file.</p>\n                            </Box>\n                        }\n                        <input ref={inputFileRef as any} id=\"files\" hidden={true} type=\"file\" onClick={onInputClick} onChange={onFileChange} />\n                        {!fileUpload.loaded && <Button onClick={() => { (inputFileRef as any).current.click() }} htmlFor=\"files\" className=\"sbt\" hidden={!step}>Import .GLQ</Button>}\n                        {!step || fileUpload.loaded &&\n                            <Button onClick={() => { resetEntry() }} className=\"sbt\">Reset</Button>}\n                        {!step &&\n                            <Button className=\"sbt\" mr={3} onClick={() => { setSuccess(\"\"); setStep(!step); }}>Previous</Button>\n                        }\n                        {!success &&\n                        <div>\n                             {fileUpload.loaded && !step &&\n                             <Button className=\"bt\" onClick={() => updateStep()}>Next</Button>}\n                             {fileUpload.loaded && step &&\n                             <Button className=\"bt\" onClick={() => updateStep()}>Create</Button>}\n\n                            {!fileUpload.loaded && template.loaded &&\n                             <Button className=\"bt\" onClick={() =>  {\n                                var host = window.location.hostname.replace('app.', '')\n                                console.log(host)\n                                Cookies.set('graph', template.template.bytes, { domain: host });\n                                window.open(`https://ide.graphlinq.io/?loadGraph=${template.template.idgraphsTemplates}`, \"_blank\")\n                             }}>Go to IDE</Button>}\n\n                        </div>}\n\n                        {/* {!success &&\n                            <Button colorScheme=\"brand\" onClick={() => updateStep()}>\n                                {fileUpload.loaded && !step &&\n                                <span>Next</span>}\n                                {fileUpload.loaded && step &&\n                                <span>Deploy</span>}\n                                \n                                {!fileUpload.loaded && step &&\n                                <span>Go to IDE</span>}\n                                { {step ? \"Next\" : \"Create\"} }\n                            </Button>\n                        } */}\n                    </ModalFooter>\n                </ModalContent>\n            </Modal>\n        </>\n    );\n}","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/ContractBalance/ContractCard.tsx",["344","345","346","347","348","349","350","351","352","353"],"import { Box, Button, ButtonGroup, Icon, Text } from '@chakra-ui/react';\nimport { FiArrowDownLeft } from 'react-icons/fi';\nimport { ModalDeposit } from './ModalDeposit';\nimport { ModalWithdraw } from './ModalWithdraw';\nimport React, { useEffect, useState } from \"react\";\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\nimport { useWalletContract } from \"../../hooks/useWalletContract\"\n\ninterface ContractCardProps {\n\n}\n\nexport const ContractCard: React.FC<ContractCardProps> = ({ }) => {\n\n    const { account } = useWeb3React();\n    const {balance, refreshBalanceContract} =  useWalletContract();\n\n    useEffect(()  => {\n        refreshBalanceContract();\n    }, [account])\n\n    return (\n        <div className=\"bal\">\n            <h2>Cloud Contract Balance</h2>\n            <div className=\"val in\"><strong>{balance.amount}</strong> GLQ</div>\n            <div className=\"act\">\n                <ModalDeposit />\n                <ModalWithdraw />\n            </div>\n        </div>\n    );\n}","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/redux/constants/actions.ts",["354"],"import { AnyAction } from \"redux\";\n\nexport const RESET_REDUX_STATE = \"RESET_REDUX_STATE\"\nexport const DIAGRAM_UPDATE = \"DIAGRAM_UPDATE\"","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/mock/mocks.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/pages/Presale.tsx",["355","356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/pages/Graphs.tsx",["370","371","372","373","374","375","376","377","378","379","380","381","382"],"import React, { useState, useEffect } from 'react';\nimport { Grid, Heading, VStack, Box, Flex, Text, Spacer, HStack, IconButton, Icon, Button, Alert, AlertIcon, Center } from '@chakra-ui/react';\nimport { GraphCard } from '../components/Graphs/GraphCard';\nimport { HiPlus } from 'react-icons/hi';\nimport { GraphResponse } from '../providers/responses/graph';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport GraphService from '../services/graphService';\nimport { GRAPH_UPDATE } from '../redux/actions';\nimport { GraphStateEnum } from '../enums/graphState';\nimport { SuspenseSpinner } from '../components/SuspenseSpinner';\nimport { GraphCreation } from '../components/GraphCreation/GraphCreation';\n\ninterface GraphsProps {\n\n}\n\nconst Graphs: React.FC<GraphsProps> = ({ }) => {\n\n    const [reachable, setReacheable] = useState(true)\n    const { account } = useWeb3React();\n    const dispatch = useDispatch();\n\n    const graphsList: GraphResponse[] = useSelector(\n        (state: any) => state.modals.graphs.list\n    );\n\n    const loaded: boolean = useSelector(\n        (state: any) => state.modals.graphs.loaded\n    );\n\n    useEffect(() => {\n        const refreshfnc = async () => {\n            const graphs: GraphResponse[] | undefined = await GraphService.listGraphs();\n            if (graphs === undefined) {\n                return setReacheable(false)\n             }\n\n            dispatch({\n                name: \"graphs\",\n                type: GRAPH_UPDATE,\n                payload: { graphs, loaded: true },\n            })\n\n            setTimeout(refreshfnc, 10000)\n        };\n\n        refreshfnc()\n    }, [account])\n\n    return (\n        <>\n            <h1>\n                Graphs\n                <GraphCreation className=\"bt\">\n                    New Graph <i className=\"fal fa-plus-circle\"></i>\n                </GraphCreation>\n            </h1>\n            <Alert status=\"info\">\n                <i className=\"fal fa-info-circle\"></i> \n                <p>Below is the list of your Graphs. You can view logs, stop or delete each one of them.</p>\n            </Alert>\n            {reachable && !loaded &&\n            <SuspenseSpinner/>}\n            {!reachable &&\n            <Alert status=\"info\">\n                <i className=\"fal fa-times-circle\"></i> \n                <p>The engine main-net network can't be reached, please try again later or contact the <i>GraphLinq Support</i>.</p>\n            </Alert>\n            }\n            {graphsList.length == 0 && loaded &&\n                <Alert status=\"info\">\n                    <i className=\"fal fa-exclamation-triangle\"></i> \n                    <p>You don't have created or deployed any graph yet, refer to our <Box\n                            as=\"a\"\n                            target=\"_blank\"\n                            marginStart=\"1\"\n                            href=\"https://docs.graphlinq.io/graph\"\n                            color='amber.600'\n                            _hover={{ color: 'amber.700' }}\n                            display={{ base: 'block', sm: 'revert' }}\n                        >documentation</Box> to start your journey.</p>\n                </Alert>\n            }\n            {graphsList.length > 0 &&\n            <div className=\"table\">\n                <Box py={3} px={8} className=\"th\">\n                    <Flex alignItems=\"center\">\n                        <Box flex=\"1 1 0%\" display=\"flex\" px={2}>\n                            <Text fontSize=\"xs\">Name :</Text>\n                            <Spacer />\n                        </Box>\n                        <Box display=\"flex\" width=\"48px\" minH=\"48px\" justifyContent=\"center\" px={2} />\n                        <Box display=\"flex\" width=\"200px\" px={2}>\n                            <Text fontSize=\"xs\">Hosted API :</Text>\n                            <Spacer />\n                        </Box>\n                        <Box display=\"flex\" width=\"200px\" px={2}>\n                            <Text fontSize=\"xs\">Execution cost :</Text>\n                            <Spacer />\n                        </Box>\n                        <Box display=\"flex\" width=\"160px\" px={2}>\n                            <Text fontSize=\"xs\">Running since :</Text>\n                            <Spacer />\n                        </Box>\n                        <Box display=\"flex\" width=\"160px\" px={2}>\n                            <Text fontSize=\"xs\">Created :</Text>\n                            <Spacer />\n                        </Box>\n                        <Box display=\"flex\" width=\"135px\" minH=\"48px\" justifyContent=\"center\" px={2} />\n                        <Box display=\"flex\" width=\"40px\" minH=\"48px\" justifyContent=\"center\" />\n                    </Flex>\n                </Box>\n                <VStack spacing={8} mb={4}>\n                    {graphsList.sort((a: GraphResponse, b: GraphResponse) => { return b.state - a.state }).map((x: GraphResponse, i: number) => {\n                        return <GraphCard key={`graph-${i}`} GraphInfo={x} />\n                    })}\n                </VStack>\n            </div>\n            }\n        </>\n    );\n}\n\nexport default Graphs;","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/pages/Home.tsx",["383","384","385","386","387","388","389"],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/assets/icons/index.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/ContractBalance/ModalWithdraw.tsx",["390","391","392","393","394","395","396","397","398"],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/hooks/useWalletContract.tsx",["399"],"import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { utils } from 'ethers';\nimport { UPDATE_BALANCE_CONTRACT } from '../redux/actions/index';\nimport { useActiveWeb3React } from '.';\nimport { useBalanceContract } from './useContract';\n\nexport function useWalletContract() {\n  const { account } = useActiveWeb3React()\n\n  const dispatch = useDispatch();\n  \n  const balance = useSelector(state => (state as any).modals.balanceContract);\n\n  const contract = useBalanceContract(process.env.REACT_APP_GRAPHLINQ_BALANCE_CONTRACT);\n\n  const refreshBalanceContract = useCallback(async () => {\n      if (!account || !contract) {\n        return;\n      }\n      try {\n      const balanceOf = await contract.getBalance(account);\n      if (!balanceOf) return;\n  \n      const balance = parseFloat(utils.formatUnits(balanceOf, 18));\n      dispatch({ type: UPDATE_BALANCE_CONTRACT, payload: {balanceContract: balance}, name: 'balanceContract'});\n      } catch (e) { console.error(e) }\n\n  }, [account, contract]);\n\n return { balance, refreshBalanceContract }\n}\n","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/services/graphService.tsx",["400","401","402","403"],"import { GraphStateEnum } from \"../enums/graphState\";\nimport { ErrorResponse } from \"../providers/error\";\nimport ManagerProvider from \"../providers/manager\"\nimport { DeployGraphRequest } from \"../providers/requests/deploy\";\nimport AuthResponse from \"../providers/responses/auth\"\nimport { DeployGraphResponse } from \"../providers/responses/deploy\";\nimport { GraphResponse } from \"../providers/responses/graph\";\nimport { GraphLogs, Log } from \"../providers/responses/logs\";\nimport { GraphStateResponse } from \"../providers/responses/state\";\nimport { GraphStateRequest } from \"../providers/requests/state\"\nimport { ResponseSuccess } from \"../providers/responses/success\";\nimport { CompressGraphResponse } from \"../providers/responses/compress\";\nimport { DecompressGraphResponse } from \"../providers/responses/decompress\";\nimport { GraphTemplate, TemplateGraphResponse } from \"../providers/responses/templateGraph\";\n\nexport default class GraphService {\n    public static async deployGraph(request: DeployGraphRequest): Promise<String | undefined>\n    {\n        try\n        {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            const result: DeployGraphResponse = await ManagerProvider.deployGraph(request, session.token)\n            return new String(result.hash)\n        }\n        catch (error)\n        {\n            console.error(error)\n            return undefined;\n        }\n    }\n\n    public static async listGraphs(): Promise<GraphResponse[] | undefined>\n    {\n        try\n        {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            const result: GraphResponse[] = await ManagerProvider.listGraphs(session.token)\n            \n            result.forEach(x => { x.loadedAt = new Date(x.loadedAt); x.createdAt = new Date(x.createdAt) })\n            return result\n        }\n        catch (error)\n        {\n            console.error(error)\n            return undefined;\n        }\n    }\n\n    public static async graphState(hash: string): Promise<GraphStateResponse | undefined>\n    {\n        try\n        {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            const result: GraphStateResponse = await ManagerProvider.fetchGraphState({ hash }, session.token)\n            return result\n        }\n        catch (error)\n        {\n            console.error(error)\n            return undefined;\n        }\n    }\n\n    public static async graphLogs(hash: string): Promise<Log[] | undefined>\n    {\n        try\n        {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            const result: GraphLogs = await ManagerProvider.fetchGraphLogs({ hash }, session.token)\n            return result.logs\n        }\n        catch (error)\n        {\n            console.error(error)\n            return undefined;\n        }\n    }\n\n    public static async setGraphState(state: GraphStateEnum, hash: string): Promise<boolean>\n    {\n        try\n        {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            const result: ResponseSuccess = await ManagerProvider.updateGraphState({ state, hash }, session.token)\n            return result.success\n        }\n        catch (error)\n        {\n            console.error(error)\n            return false;\n        }\n    }\n\n    public static async compressGraph(toCompress: any): Promise<string | undefined>\n    {\n        try\n        {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            const result: CompressGraphResponse = await ManagerProvider.compressGraphData({ data: toCompress }, session.token)\n            return result.compressed\n        }\n        catch (error)\n        {\n            console.error(error)\n            return undefined;\n        }\n    }\n\n    public static async decompressGraph(toDecompress: any): Promise<string | undefined>\n    {\n        try\n        {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            const result: DecompressGraphResponse = await ManagerProvider.decompressGraphData({ data: toDecompress }, session.token)\n            return result.decompressed\n        }\n        catch (error)\n        {\n            console.error(error)\n            return undefined;\n        }\n    }\n\n    public static async removeGraph(hash: string): Promise<boolean>\n    {\n        try\n        {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            const result: ResponseSuccess = await ManagerProvider.stopAndDeleteGraph({ state: GraphStateEnum.Stopped, hash }, session.token)\n            return result.success\n        }\n        catch (error)\n        {\n            console.error(error)\n            return false;\n        }\n    }\n    public static async listGraphsTemplates(): Promise<GraphTemplate[]>\n    {\n        try\n        {\n            const session = JSON.parse(localStorage.getItem(\"session\") as string)\n            const result: TemplateGraphResponse = await ManagerProvider.getGraphsTemplates(session.token)\n            if (result.success) {\n                return result.templates\n            }\n        }\n        catch (error) {\n            console.error(error)    \n        }\n        return []\n    }\n}","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/ContractBalance/ModalDeposit.tsx",["404","405","406","407","408","409","410","411","412","413"],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/enums/graphState.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/GraphCreation/TemplateFile.tsx",["414","415","416","417","418"],"import React from 'react'\nimport { FormControl, FormLabel, Input } from '@chakra-ui/react'\nimport { Alert, AlertIcon, Grid, Heading } from '@chakra-ui/react';\n\ninterface TemplateFileProps {\n    file: File\n    name: string\n}\n\nexport const TemplateFile: React.FC<TemplateFileProps> = (props: TemplateFileProps) => {\n\n    return (\n        <>\n            <FormControl isRequired>\n                <Alert status=\"info\">\n                    <i className=\"fal fa-info-circle\"></i> \n                    <p>You're about to deploy a new graph named \"{props.name}\" based on the file {props.file.name} you uploaded,\n                    it will be directly launched with the STARTING state over the Engine.</p>\n                </Alert>\n            </FormControl>\n        </>\n    )\n}","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/GraphCreation/RadioCard.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/GraphCreation/BlankCard.tsx",["419","420","421","422","423"],"import React, {useEffect} from 'react'\nimport { Box, useRadio, Icon, Flex } from '@chakra-ui/react';\nimport { FiFile } from 'react-icons/fi';\nimport TemplateLogo from \"../../assets/radio/r-01.svg\"\nimport TemplateLogoSelect from \"../../assets/radio/r-04.svg\"\n\ninterface BlankCardProps {\n\n}\n\nexport const BlankCard: React.FC<BlankCardProps> = (props) => {\n\n    return (\n         <>\n            <div className=\"lgc\">\n                <Box\n                    className=\"lg-nsl\"\n                    h=\"50px\"\n                    maxH=\"50px\"\n                    bgImage={\"url('\" + TemplateLogo + \"')\"}\n                    bgPosition=\"center\"\n                    bgRepeat=\"no-repeat\"\n                />\n                <Box\n                    className=\"lg-sl\"\n                    h=\"50px\"\n                    maxH=\"50px\"\n                    bgImage={\"url('\" + TemplateLogoSelect + \"')\"}\n                    bgPosition=\"center\"\n                    bgRepeat=\"no-repeat\"\n                />\n                Blank\n            </div>\n        </> \n    );\n}","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/GraphCreation/TemplateCard.tsx",["424","425","426"],"import React from 'react'\nimport { Box, Image, Badge, useRadio } from '@chakra-ui/react';\nimport TemplateLogo from \"../../assets/radio/r-02.svg\"\nimport TemplateLogoSelect from \"../../assets/radio/r-03.svg\"\n\ninterface TemplateCardProps {\n    TemplateImageUrl: string,\n    TemplateImageAlt: string,\n    TemplateTitle: string,\n}\n\nexport const TemplateCard: React.FC<TemplateCardProps> = (props) => {\n\n    return (\n        <>\n            <div className=\"lgc\">\n                <Box\n                    className=\"lg-nsl\"\n                    h=\"50px\"\n                    maxH=\"50px\"\n                    bgImage={\"url('\" + TemplateLogo + \"')\"}\n                    bgPosition=\"center\"\n                    bgRepeat=\"no-repeat\"\n                />\n                <Box\n                    className=\"lg-sl\"\n                    h=\"50px\"\n                    maxH=\"50px\"\n                    bgImage={\"url('\" + TemplateLogoSelect + \"')\"}\n                    bgPosition=\"center\"\n                    bgRepeat=\"no-repeat\"\n                />\n                {props.TemplateTitle}\n            </div>\n        </>\n    );\n}","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/providers/manager.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/Graphs/GraphCard.tsx",["427","428","429","430","431","432","433","434","435","436","437"],"import React, { useEffect, useRef } from 'react'\nimport { Flex, Text, Link, Spacer, Button, Icon, Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, Menu, MenuButton, IconButton, MenuList, MenuItem, useDisclosure, Portal, Box, LinkOverlay, LinkBox, MenuDivider, Skeleton } from '@chakra-ui/react';\nimport { HiOutlineEye, HiOutlineDotsHorizontal } from 'react-icons/hi';\nimport { MotionBox } from '../MotionBox'\nimport { GraphStatus } from './GraphStatus';\nimport { GraphResponse } from '../../providers/responses/graph';\nimport { GraphStateEnum } from '../../enums/graphState';\nimport GraphService from '../../services/graphService';\nimport { Log } from '../../providers/responses/logs';\nimport useInterval from '../../hooks/useInterval'\nimport Cookies from 'js-cookie'\n\ninterface GraphCardProps {\n    GraphInfo: GraphResponse,\n    GraphName?: string,\n    GraphIDELink?: string,\n    GraphExecCost?: number,\n    GraphExecTime?: string,\n    GraphCreation?: string,\n    Status?: number\n}\n\nfunction timeSinceExecution(date: any): string {\n    var now: Date = new Date();\n\n    var timeStart = date.getTime();\n    var timeEnd = now.getTime();\n    var hourDiff = timeEnd - timeStart; //in ms\n    var secDiff = hourDiff / 1000; //in s\n    var minDiff = hourDiff / 60 / 1000; //in minutes\n    var hDiff = hourDiff / 3600 / 1000; //in hours\n\n    const hours = Math.floor(hDiff);\n    const minutes = (minDiff - 60 * hours).toFixed(2)\n\n    return `${hours} hours, ${minutes} minutes.`\n}\n\nexport const GraphCard: React.FC<GraphCardProps> = ({\n    GraphInfo = undefined,\n    GraphName = \"Default\",\n    GraphIDELink = \"https://ide.graphlinq.io/graphId\",\n    GraphExecCost = null,\n    GraphExecTime = \"—\",\n    GraphCreation = \"—\",\n    Status = 0,\n    ...props\n}) => {\n\n    const [logs, setLogs] = React.useState([])\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const [inLogs, setInLogs] = React.useState<boolean>(false);\n\n    const bottomRef = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        scrollToBottom()\n    }, [])\n\n    const scrollToBottom = () => {\n        if (bottomRef && bottomRef.current) {\n            bottomRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"start\",\n            });\n        }\n    };\n\n    async function tickLogs() {\n        setLogs((await GraphService.graphLogs(GraphInfo?.hashGraph ?? \"\")) as any)\n        scrollToBottom()\n    }\n\n    useEffect(() => {\n        let interval: NodeJS.Timeout | null;\n\n        if (inLogs) {\n            tickLogs()\n            interval = setInterval(async () => {\n                if (interval) {\n                    tickLogs()\n                }\n            }, 5000);\n        }\n\n        return () => {\n            if (interval) clearInterval(interval);\n        };\n    }, [inLogs]);\n\n    function onLogsOpen() {\n        onOpen()\n        setInLogs(true)\n    }\n\n    function onLogsClose() {\n        onClose()\n        setInLogs(false)\n    }\n\n    function getColorLog(type: string): string {\n        switch (type) {\n            case \"info\":\n                return \"blue.400\"\n            case \"success\":\n                return \"emerald.500\"\n            case \"warn\":\n                return \"amber.500\"\n        }\n        return \"\"\n    }\n\n    const [isLoading, setIsLoading] = React.useState<boolean>(false);\n\n    async function changeGraphState(state: GraphStateEnum) {\n        setIsLoading(true)\n        const result: boolean = await GraphService.setGraphState(state, GraphInfo?.hashGraph ?? \"\")\n        if (result && GraphInfo !== undefined) {\n            GraphInfo.state = state\n        }\n        setIsLoading(false)\n    }\n\n    async function removeGraph() {\n        setIsLoading(true)\n        const result: boolean = await GraphService.removeGraph(GraphInfo?.hashGraph ?? \"\")\n        setIsLoading(false)\n    }\n\n    async function deployGraph() {\n        setIsLoading(true)\n        const hash: String | undefined = await GraphService.deployGraph({\n            state: GraphStateEnum.Starting,\n            bytes: GraphInfo?.lastLoadedBytes ?? \"\",\n            alias: GraphInfo?.alias ?? \"Unnamed\",\n            hash: GraphInfo?.hashGraph\n        })\n        if (hash !== undefined && GraphInfo !== undefined) {\n            GraphInfo.state = GraphStateEnum.Starting\n        }\n        setIsLoading(false)\n    }\n\n    async function exportGlqFile()\n    {\n        const element = document.createElement(\"a\");\n        const file = new Blob([(GraphInfo?.lastLoadedBytes as any)], \n                    {type: 'text/plain;charset=utf-8'});\n        element.href = URL.createObjectURL(file);\n        element.download = `${GraphInfo?.alias}.glq`;\n        document.body.appendChild(element);\n        element.click();\n    }\n\n    return (\n        <MotionBox as=\"article\">\n            <Flex alignItems=\"center\">\n                <Box flex=\"1 1 0%\" display=\"flex\" alignItems=\"center\" px={2}>\n                    <GraphStatus state={GraphInfo?.state ?? 0} />\n                    <Flex flexDirection=\"column\">\n                        <Link fontWeight=\"semibold\" textColor=\"brand.800\" href={GraphIDELink} isExternal>\n                            {GraphInfo?.alias}\n                        </Link>\n                        <Text as=\"samp\" fontSize=\"xs\" textColor=\"gray.400\" maxWidth=\"200px\" isTruncated>{GraphInfo?.hashGraph}</Text>\n                    </Flex>\n                    <Spacer />\n                </Box>\n\n                <Box display=\"flex\" width=\"48px\" minH=\"48px\" justifyContent=\"center\" px={2} />\n                {GraphInfo?.hostedApi &&\n                <Box display=\"flex\" width=\"200px\" px={2}>\n                    <Skeleton isLoaded={!isLoading}>\n                    \n                        <Link fontSize=\"xs\" fontWeight=\"semibold\" textColor=\"brand.800\" href={`https://api-hosted.graphlinq.io/${GraphInfo?.hashGraph}`} isExternal>\n                        api-hosted.graphlinq.io/{GraphInfo?.hashGraph.substr(0, 6)}..\n                        </Link>\n                          \n                        <Spacer />\n                    </Skeleton>\n                </Box>\n                }\n                <Box display=\"flex\" width=\"200px\" px={2}>\n                    <Skeleton isLoaded={!isLoading}>\n                        <Text fontSize=\"sm\" textColor=\"gray.600\">{GraphInfo?.lastExecutionCost || \"—\"} GLQ</Text>\n                        <Spacer />\n                    </Skeleton>\n                </Box>\n                <Box display=\"flex\" width=\"160px\" px={2}>\n                    <Skeleton isLoaded={!isLoading}>\n                        <Text fontSize=\"sm\" textColor=\"gray.600\">{(GraphInfo?.state === GraphStateEnum.Started) ? timeSinceExecution(GraphInfo?.loadedAt) : \"—\"}</Text>\n                        <Spacer />\n                    </Skeleton>\n                </Box>\n                <Box display=\"flex\" width=\"160px\" px={2}>\n                    <Skeleton isLoaded={!isLoading}>\n                        <Text fontSize=\"sm\" textColor=\"gray.600\">{GraphInfo?.createdAt.toLocaleString()}</Text>\n                    </Skeleton>\n                    <Spacer />\n                </Box>\n                <Button onClick={onLogsOpen} mr={3} className=\"bt\">\n                    View Logs <i className=\"fal fa-eye\"></i>\n                </Button>\n\n                <Modal onClose={onClose} isOpen={isOpen} scrollBehavior=\"inside\" size=\"full\">\n                    <ModalOverlay className=\"ov\"/>\n                    <ModalContent className=\"mod mod-log\">\n                        <header><h2>Logs</h2></header>\n                        <ModalCloseButton className=\"clo\" />\n                        <ModalBody>\n                            {logs === undefined && <Text textColor=\"amber.500\">No logs available...</Text>}\n                            {logs !== undefined && logs.map((x: Log, i: number) => {\n                                return <Text textColor={getColorLog(x.type)} key={`txt-${i}`}>[{x.type}] ({new Date(x.timestamp).toLocaleString()}):<br /> {x.message}</Text>\n                            })}\n                            <div ref={bottomRef}></div>\n                        </ModalBody>\n                        <ModalFooter className=\"fot\">\n                            <Button className=\"sbt\" onClick={onLogsClose}>Close</Button>\n                        </ModalFooter>\n                    </ModalContent>\n                </Modal>\n                <Menu>\n                    <MenuButton\n                        as={IconButton}\n                        aria-label=\"Links\"\n                        icon={<Icon as={HiOutlineDotsHorizontal} w={5} h={5} />}\n                        className=\"mn\"\n                    />\n                    <MenuList className=\"mnv\">\n                        <MenuItem onClick={() => { deployGraph() }}><i className=\"fal fa-play\"></i> Start</MenuItem>\n                        <MenuItem onClick={() => { changeGraphState(GraphStateEnum.Restarting) }}><i className=\"fal fa-play\"></i> Force restart</MenuItem>\n                        <MenuItem onClick={() => { changeGraphState(GraphStateEnum.Stopped) }}><i className=\"fal fa-stop\"></i> Stop</MenuItem>\n                        <MenuItem onClick={() => { exportGlqFile() }}><i className=\"fal fa-file\"></i> Export as .GLQ File</MenuItem>\n                        <MenuItem onClick={() => { removeGraph() }}><i className=\"fal fa-trash\"></i> Delete</MenuItem>\n                    </MenuList>\n                </Menu>\n            </Flex>\n        </MotionBox>\n    );\n}\n\nexport default GraphCard;","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/Graphs/GraphStatus.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/MotionBox.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/routes/sidebar.tsx",[],"/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/BrowserWallet/WalletManager.tsx",["438","439","440","441","442","443","444"],"import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nimport { UnsupportedChainIdError, useWeb3React } from \"@web3-react/core\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  OPEN_MODAL,\n  CLOSE_MODAL,\n  ACCOUNT_UPDATE,\n} from \"../../redux/actions/index\";\n\nimport { isMobile } from \"react-device-detect\";\nimport { bsc, fortmatic, injected, portis } from \"../../connectors/index\";\nimport { OVERLAY_READY } from \"../../connectors/fortmatic\";\n\nimport { SUPPORTED_WALLETS } from \"../../constants/index\";\nimport usePrevious from \"../../hooks/usePrevious\";\n\nimport Option from \"./Option\";\nimport PendingView from \"./PendingView\";\nimport { useHistory } from \"react-router-dom\";\nimport WalletService from \"../../services/walletService\";\nimport Web3 from \"web3\"\nimport { Alert, AlertDescription, AlertIcon, AlertTitle, Box, Text, Link } from \"@chakra-ui/react\";\n\nconst WALLET_VIEWS = {\n  OPTIONS: \"options\",\n  OPTIONS_SECONDARY: \"options_secondary\",\n  ACCOUNT: \"account\",\n  PENDING: \"pending\",\n};\n\nconst WalletManager = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { active, account, connector, activate, error, library } = useWeb3React();\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n\n  const [pendingWallet, setPendingWallet] = useState();\n\n  const [pendingError, setPendingError] = useState(false);\n\n  const previousAccount = usePrevious(account);\n\n  const walletModalOpen = useSelector(\n    (state: any) => state.modals.walletManager.show\n  );\n\n  const binanceWalletSign = async (web3: any) => {\n    return new Promise<string>((res, rej) => {\n      web3\n      .request({\n        method: 'eth_sign',\n        params: [account, process.env.REACT_APP_SIGN_KEY as string],\n      })\n      .then((result: any) => {\n       res(result)\n      })\n      .catch((error: any) => {\n        rej(error)\n    });\n    })\n\n  }\n\n  useEffect(() => {\n    if (!account) { return }\n    if (WalletService.verifySessionIntegrity(account)) {\n      return history.push(\"/\");\n    }\n      (async () => {\n        console.log(activate)\n        let web3: any = undefined\n        let signature: string = \"\"\n        const firstChain = (connector as any).supportedChainIds[0]\n        // if ((window as any).BinanceChain !== undefined && firstChain !== 100) {\n        //   web3 = (window as any).BinanceChain\n        //   try {\n        //     signature = await binanceWalletSign(web3)\n        //   } catch (e) { console.error(e)}\n        // }\n        // else \n        if ((window as any).ethereum !== undefined) {\n          web3 = new Web3((window as any).ethereum)\n          try {\n            signature = await web3.eth.personal.sign(process.env.REACT_APP_SIGN_KEY as string, account, \"\")\n          } catch (e) { console.error(e) }\n        }\n        const result = await WalletService.authWallet(account, signature)\n\n        if (result) {\n          dispatch({\n            name: \"walletManager\",\n            type: ACCOUNT_UPDATE,\n            payload: {\n              account,\n            },\n          });\n          return history.push(\"/\");\n        }\n    })()\n  }, [account])\n\n  const toggleWalletModal = () => {\n    if (walletModalOpen) dispatch({ type: CLOSE_MODAL, name: \"walletManager\" });\n    else dispatch({ type: OPEN_MODAL, name: \"walletManager\" });\n  };\n\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal();\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]);\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [walletModalOpen]);\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active);\n  const connectorPrevious = usePrevious(connector);\n  useEffect(() => {\n    if (\n      walletModalOpen &&\n      ((active && !activePrevious) ||\n        (connector && connector !== connectorPrevious && !error))\n    ) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [\n    setWalletView,\n    active,\n    error,\n    connector,\n    walletModalOpen,\n    activePrevious,\n    connectorPrevious,\n  ]);\n\n  const tryActivation = async (connector: any) => {\n    Object.keys(SUPPORTED_WALLETS).map((key) => {\n      if (connector === (SUPPORTED_WALLETS as any)[key].connector) {\n        return (SUPPORTED_WALLETS as any)[key].name;\n      }\n      return true;\n    });\n\n    setPendingWallet(connector); // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING);\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (\n      connector instanceof WalletConnectConnector &&\n      connector.walletConnectProvider?.wc?.uri\n    ) {\n      connector.walletConnectProvider = undefined;\n    }\n\n    connector &&\n      activate(connector, undefined, true).catch((error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          activate(connector); // a little janky...can't use setError because the connector isn't set\n        } else {\n          setPendingError(true);\n        }\n      });\n  };\n\n  // close wallet modal if fortmatic modal is active\n  useEffect(() => {\n    fortmatic.on(OVERLAY_READY, () => {\n      toggleWalletModal();\n    });\n  }, [toggleWalletModal]);\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask =\n      (window as any).ethereum && (window as any).ethereum.isMetaMask;\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\n      const option = (SUPPORTED_WALLETS as any)[key];\n      // check for mobile options\n      if (isMobile) {\n        // disable portis on mobile for now\n        if (option.connector === portis) {\n          return null;\n        }\n\n        if (\n          !(window as any).web3 &&\n          !(window as any).ethereum &&\n          option.mobile\n        ) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector &&\n                  !option.href &&\n                  tryActivation(option.connector);\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              link={option.href}\n              header={option.name}\n              icon={option.iconName}\n            />\n          );\n        }\n        return null;\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected || option.connector === bsc) {\n        // don't show injected if there's no injected provider\n        if (!((window as any).web3 || (window as any).ethereum)) {\n          if (option.name === \"MetaMask\") {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                header=\"Install Metamask\"\n                subheader={undefined}\n                link=\"https://metamask.io/\"\n                icon={\"MetaMaskIcon\"}\n              />\n            );\n          }\n          else if (option.name === \"Binance Chain Wallet\") {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                header=\"Install Binance Chain Wallet\"\n                subheader={undefined}\n                link=\"https://chrome.google.com/webstore/detail/binance-chain-wallet/fhbohimaelbohpjbbldcngcnapndodjp\"\n                icon={\"BinanceIcon\"}\n              />\n            );\n          }\n          return null; // dont want to return install twice\n        }\n        // don't return metamask if injected provider isn't metamask\n        if (option.name === \"MetaMask\" && !isMetamask) {\n          return null;\n        }\n        // likewise for generic\n        if (option.name === \"Injected\" && isMetamask) {\n          return null;\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href && tryActivation(option.connector);\n            }}\n            key={key}\n            active={option.connector === connector}\n            link={option.href}\n            header={option.name}\n            subheader={undefined} // use option.descriptio to bring back multi-line\n            icon={option.iconName}\n          />\n        )\n      );\n    });\n  }\n\n  function getContent() {\n    if (error) {\n      console.log(error);\n      return (\n        <Alert\n          status=\"error\"\n          variant=\"subtle\"\n        >\n          <AlertIcon boxSize=\"40px\" mr={0} />\n          <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n            {error instanceof UnsupportedChainIdError\n              ? \"Wrong Network\"\n              : \"Error connecting\"}\n          </AlertTitle>\n          <AlertDescription maxWidth=\"sm\">\n            {error instanceof UnsupportedChainIdError ? (\n              <Box>\n                <Text>Please connect to the appropriate Ethereum network (Ropsten Or Mainnet).</Text>\n                <Link href=\"https://docs.graphlinq.io/wallet/1-index\" textDecoration=\"underline\" isExternal>Check out the documentation about wallet</Link>\n              </Box>\n            ) : (\n                \"Error connecting. Try refreshing the page.\"\n              )}\n          </AlertDescription>\n        </Alert>\n      );\n    }\n\n    return (\n      <>\n        {walletView === WALLET_VIEWS.PENDING ? (\n          <PendingView\n            connector={pendingWallet}\n            error={pendingError}\n            setPendingError={setPendingError}\n            tryActivation={tryActivation}\n          />\n        ) : (\n            <>{getOptions()}</>\n          )}\n      </>\n    );\n  }\n\n  return <>{getContent()}</>;\n};\n\nexport default WalletManager;\n","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/BrowserWallet/PendingView.tsx",["445","446"],"import React from 'react'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\nimport { SUPPORTED_WALLETS } from '../../constants/index'\nimport { injected } from '../../connectors/index'\nimport Option from './Option'\nimport { Alert, AlertIcon, Button, Spacer } from '@chakra-ui/react'\n\nexport default function PendingView({\n    connector,\n    error = false,\n    setPendingError,\n    tryActivation\n}: any) {\n    const isMetamask = (window as any)?.ethereum?.isMetaMask\n\n    return (\n        <>\n                {error ? (\n                    <Alert variant=\"left-accent\" status=\"error\" mb={3} py={2} borderRadius=\"md\">\n                        <AlertIcon />\n                            Error connecting.\n                        <Spacer />\n                        <Button\n                            variant=\"ghost\"\n                            colorScheme=\"red\"\n                            onClick={() => {\n                                setPendingError(false)\n                                connector && tryActivation(connector)\n                            }}>\n                            Try Again\n                            </Button>\n                    </Alert>\n                ) : (\n                <Alert variant=\"left-accent\" status=\"warning\" mb={3} py={2} borderRadius=\"md\">\n                    <AlertIcon />\n                    Initializing...\n                    </Alert>\n                    )}\n            {\n                Object.keys(SUPPORTED_WALLETS).map(key => {\n                    const option = (SUPPORTED_WALLETS as any)[key]\n                    if (option.connector === connector) {\n                        if (option.connector === injected) {\n                            if (isMetamask && option.name !== 'MetaMask') {\n                                return null\n                            }\n                            if (!isMetamask && option.name === 'MetaMask') {\n                                return null\n                            }\n                        }\n                        return (\n                            <Option\n                                id={`connect-${key}`}\n                                key={key}\n                                clickable={false}\n                                header={option.name}\n                                subheader={option.description}\n                                icon={option.iconName} />\n                        )\n                    }\n                    return null\n                })\n            }\n        </>\n    )\n}\n","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/components/BrowserWallet/Option.tsx",["447","448","449"],"import React from 'react'\nimport { Button, Text, Box, Icon, Spacer, Link } from '@chakra-ui/react';\nimport * as WalletIcons from \"../../assets/icons\";\n\nexport default function Option({\n    link = \"\",\n    clickable = true,\n    size = 0,\n    onClick = () => { },\n    color = \"\",\n    header = \"\",\n    subheader = \"\",\n    icon = \"\",\n    active = false,\n    id = \"\"\n}) {\n    const content = (\n        <Button\n            id={id}\n            isActive={active}\n            _active={{ backgroundColor: \"indigo.50\" }}\n            onClick={onClick}\n        >\n            <span>{header}</span>\n            <Icon as={(WalletIcons as any)[icon]} w={6} h={6} />\n        </Button>\n    )\n    if (link) {\n        return (\n            <Link href={link} isExternal>\n                {content}\n            </Link>\n        )\n    }\n\n    return content\n}\n","/Users/nuixw/Documents/Localhost/GraphLinq.AppInterface/src/hooks/usePrevious.tsx",[],{"ruleId":"450","severity":1,"message":"451","line":1,"column":17,"nodeType":"452","messageId":"453","endLine":1,"endColumn":25},{"ruleId":"450","severity":1,"message":"454","line":10,"column":26,"nodeType":"452","messageId":"453","endLine":10,"endColumn":41},{"ruleId":"455","replacedBy":"456"},{"ruleId":"457","replacedBy":"458"},{"ruleId":"455","replacedBy":"456"},{"ruleId":"457","replacedBy":"458"},{"ruleId":"450","severity":1,"message":"459","line":1,"column":17,"nodeType":"452","messageId":"453","endLine":1,"endColumn":21},{"ruleId":"450","severity":1,"message":"460","line":9,"column":8,"nodeType":"452","messageId":"453","endLine":9,"endColumn":12},{"ruleId":"450","severity":1,"message":"461","line":2,"column":66,"nodeType":"452","messageId":"453","endLine":2,"endColumn":69},{"ruleId":"455","replacedBy":"462"},{"ruleId":"457","replacedBy":"463"},{"ruleId":"450","severity":1,"message":"464","line":1,"column":17,"nodeType":"452","messageId":"453","endLine":1,"endColumn":25},{"ruleId":"450","severity":1,"message":"465","line":3,"column":28,"nodeType":"452","messageId":"453","endLine":3,"endColumn":36},{"ruleId":"466","severity":1,"message":"467","line":17,"column":6,"nodeType":"468","endLine":17,"endColumn":15,"suggestions":"469"},{"ruleId":"466","severity":1,"message":"470","line":36,"column":6,"nodeType":"468","endLine":36,"endColumn":24,"suggestions":"471"},{"ruleId":"472","severity":1,"message":"473","line":16,"column":40,"nodeType":"474","messageId":"475","endLine":16,"endColumn":43},{"ruleId":"476","severity":1,"message":"477","line":4,"column":1,"nodeType":"478","endLine":7,"endColumn":3},{"ruleId":"466","severity":1,"message":"479","line":29,"column":6,"nodeType":"468","endLine":29,"endColumn":30,"suggestions":"480"},{"ruleId":"481","severity":1,"message":"482","line":67,"column":40,"nodeType":"483","messageId":"484","endLine":67,"endColumn":61},{"ruleId":"450","severity":1,"message":"485","line":2,"column":10,"nodeType":"452","messageId":"453","endLine":2,"endColumn":17},{"ruleId":"450","severity":1,"message":"486","line":2,"column":19,"nodeType":"452","messageId":"453","endLine":2,"endColumn":23},{"ruleId":"450","severity":1,"message":"487","line":2,"column":30,"nodeType":"452","messageId":"453","endLine":2,"endColumn":36},{"ruleId":"450","severity":1,"message":"488","line":2,"column":79,"nodeType":"452","messageId":"453","endLine":2,"endColumn":85},{"ruleId":"450","severity":1,"message":"489","line":2,"column":94,"nodeType":"452","messageId":"453","endLine":2,"endColumn":100},{"ruleId":"450","severity":1,"message":"490","line":2,"column":102,"nodeType":"452","messageId":"453","endLine":2,"endColumn":106},{"ruleId":"472","severity":1,"message":"473","line":10,"column":36,"nodeType":"474","messageId":"475","endLine":10,"endColumn":39},{"ruleId":"491","severity":1,"message":"492","line":44,"column":17,"nodeType":"493","messageId":"494","endLine":44,"endColumn":76,"fix":"495"},{"ruleId":"450","severity":1,"message":"496","line":1,"column":17,"nodeType":"452","messageId":"453","endLine":1,"endColumn":21},{"ruleId":"450","severity":1,"message":"485","line":1,"column":23,"nodeType":"452","messageId":"453","endLine":1,"endColumn":30},{"ruleId":"450","severity":1,"message":"497","line":1,"column":32,"nodeType":"452","messageId":"453","endLine":1,"endColumn":36},{"ruleId":"472","severity":1,"message":"473","line":8,"column":42,"nodeType":"474","messageId":"475","endLine":8,"endColumn":44},{"ruleId":"498","severity":1,"message":"499","line":16,"column":17,"nodeType":"493","endLine":16,"endColumn":35},{"ruleId":"450","severity":1,"message":"500","line":2,"column":10,"nodeType":"452","messageId":"453","endLine":2,"endColumn":13},{"ruleId":"450","severity":1,"message":"501","line":2,"column":15,"nodeType":"452","messageId":"453","endLine":2,"endColumn":21},{"ruleId":"450","severity":1,"message":"487","line":2,"column":35,"nodeType":"452","messageId":"453","endLine":2,"endColumn":41},{"ruleId":"450","severity":1,"message":"486","line":2,"column":43,"nodeType":"452","messageId":"453","endLine":2,"endColumn":47},{"ruleId":"450","severity":1,"message":"502","line":2,"column":56,"nodeType":"452","messageId":"453","endLine":2,"endColumn":63},{"ruleId":"450","severity":1,"message":"503","line":2,"column":65,"nodeType":"452","messageId":"453","endLine":2,"endColumn":69},{"ruleId":"472","severity":1,"message":"473","line":18,"column":49,"nodeType":"474","messageId":"475","endLine":18,"endColumn":52},{"ruleId":"450","severity":1,"message":"504","line":1,"column":10,"nodeType":"452","messageId":"453","endLine":1,"endColumn":24},{"ruleId":"450","severity":1,"message":"503","line":1,"column":34,"nodeType":"452","messageId":"453","endLine":1,"endColumn":38},{"ruleId":"472","severity":1,"message":"473","line":8,"column":65,"nodeType":"474","messageId":"475","endLine":8,"endColumn":68},{"ruleId":"450","severity":1,"message":"503","line":2,"column":10,"nodeType":"452","messageId":"453","endLine":2,"endColumn":14},{"ruleId":"450","severity":1,"message":"488","line":2,"column":16,"nodeType":"452","messageId":"453","endLine":2,"endColumn":22},{"ruleId":"450","severity":1,"message":"500","line":2,"column":24,"nodeType":"452","messageId":"453","endLine":2,"endColumn":27},{"ruleId":"450","severity":1,"message":"505","line":2,"column":37,"nodeType":"452","messageId":"453","endLine":2,"endColumn":40},{"ruleId":"450","severity":1,"message":"506","line":2,"column":42,"nodeType":"452","messageId":"453","endLine":2,"endColumn":50},{"ruleId":"450","severity":1,"message":"507","line":2,"column":108,"nodeType":"452","messageId":"453","endLine":2,"endColumn":114},{"ruleId":"450","severity":1,"message":"508","line":18,"column":10,"nodeType":"452","messageId":"453","endLine":18,"endColumn":27},{"ruleId":"450","severity":1,"message":"509","line":19,"column":66,"nodeType":"452","messageId":"453","endLine":19,"endColumn":80},{"ruleId":"450","severity":1,"message":"510","line":20,"column":10,"nodeType":"452","messageId":"453","endLine":20,"endColumn":24},{"ruleId":"450","severity":1,"message":"511","line":28,"column":7,"nodeType":"452","messageId":"453","endLine":28,"endColumn":12},{"ruleId":"472","severity":1,"message":"473","line":34,"column":47,"nodeType":"474","messageId":"475","endLine":34,"endColumn":50},{"ruleId":"450","severity":1,"message":"512","line":35,"column":22,"nodeType":"452","messageId":"453","endLine":35,"endColumn":31},{"ruleId":"450","severity":1,"message":"513","line":90,"column":10,"nodeType":"452","messageId":"453","endLine":90,"endColumn":20},{"ruleId":"450","severity":1,"message":"514","line":9,"column":7,"nodeType":"452","messageId":"453","endLine":9,"endColumn":31},{"ruleId":"450","severity":1,"message":"515","line":2,"column":55,"nodeType":"452","messageId":"453","endLine":2,"endColumn":65},{"ruleId":"450","severity":1,"message":"486","line":2,"column":67,"nodeType":"452","messageId":"453","endLine":2,"endColumn":71},{"ruleId":"450","severity":1,"message":"516","line":2,"column":73,"nodeType":"452","messageId":"453","endLine":2,"endColumn":89},{"ruleId":"450","severity":1,"message":"517","line":2,"column":91,"nodeType":"452","messageId":"453","endLine":2,"endColumn":100},{"ruleId":"450","severity":1,"message":"518","line":2,"column":119,"nodeType":"452","messageId":"453","endLine":2,"endColumn":124},{"ruleId":"450","severity":1,"message":"519","line":2,"column":189,"nodeType":"452","messageId":"453","endLine":2,"endColumn":200},{"ruleId":"450","severity":1,"message":"520","line":2,"column":216,"nodeType":"452","messageId":"453","endLine":2,"endColumn":225},{"ruleId":"450","severity":1,"message":"521","line":2,"column":239,"nodeType":"452","messageId":"453","endLine":2,"endColumn":244},{"ruleId":"450","severity":1,"message":"522","line":2,"column":246,"nodeType":"452","messageId":"453","endLine":2,"endColumn":249},{"ruleId":"450","severity":1,"message":"523","line":2,"column":251,"nodeType":"452","messageId":"453","endLine":2,"endColumn":258},{"ruleId":"450","severity":1,"message":"524","line":2,"column":260,"nodeType":"452","messageId":"453","endLine":2,"endColumn":268},{"ruleId":"450","severity":1,"message":"525","line":2,"column":270,"nodeType":"452","messageId":"453","endLine":2,"endColumn":279},{"ruleId":"450","severity":1,"message":"526","line":2,"column":281,"nodeType":"452","messageId":"453","endLine":2,"endColumn":285},{"ruleId":"450","severity":1,"message":"490","line":2,"column":317,"nodeType":"452","messageId":"453","endLine":2,"endColumn":321},{"ruleId":"450","severity":1,"message":"527","line":5,"column":10,"nodeType":"452","messageId":"453","endLine":5,"endColumn":27},{"ruleId":"450","severity":1,"message":"528","line":10,"column":10,"nodeType":"452","messageId":"453","endLine":10,"endColumn":16},{"ruleId":"450","severity":1,"message":"529","line":14,"column":11,"nodeType":"452","messageId":"453","endLine":14,"endColumn":29},{"ruleId":"491","severity":1,"message":"492","line":211,"column":128,"nodeType":"493","messageId":"494","endLine":211,"endColumn":208,"fix":"530"},{"ruleId":"531","severity":1,"message":"532","line":228,"column":32,"nodeType":"533","messageId":"534","endLine":228,"endColumn":34},{"ruleId":"531","severity":1,"message":"532","line":228,"column":53,"nodeType":"533","messageId":"534","endLine":228,"endColumn":55},{"ruleId":"450","severity":1,"message":"500","line":1,"column":10,"nodeType":"452","messageId":"453","endLine":1,"endColumn":13},{"ruleId":"450","severity":1,"message":"487","line":1,"column":15,"nodeType":"452","messageId":"453","endLine":1,"endColumn":21},{"ruleId":"450","severity":1,"message":"535","line":1,"column":23,"nodeType":"452","messageId":"453","endLine":1,"endColumn":34},{"ruleId":"450","severity":1,"message":"490","line":1,"column":36,"nodeType":"452","messageId":"453","endLine":1,"endColumn":40},{"ruleId":"450","severity":1,"message":"486","line":1,"column":42,"nodeType":"452","messageId":"453","endLine":1,"endColumn":46},{"ruleId":"450","severity":1,"message":"536","line":2,"column":10,"nodeType":"452","messageId":"453","endLine":2,"endColumn":25},{"ruleId":"450","severity":1,"message":"465","line":5,"column":28,"nodeType":"452","messageId":"453","endLine":5,"endColumn":36},{"ruleId":"450","severity":1,"message":"537","line":6,"column":10,"nodeType":"452","messageId":"453","endLine":6,"endColumn":33},{"ruleId":"472","severity":1,"message":"473","line":13,"column":59,"nodeType":"474","messageId":"475","endLine":13,"endColumn":62},{"ruleId":"466","severity":1,"message":"538","line":20,"column":8,"nodeType":"468","endLine":20,"endColumn":17,"suggestions":"539"},{"ruleId":"450","severity":1,"message":"540","line":1,"column":10,"nodeType":"452","messageId":"453","endLine":1,"endColumn":19},{"ruleId":"450","severity":1,"message":"515","line":1,"column":17,"nodeType":"452","messageId":"453","endLine":1,"endColumn":27},{"ruleId":"450","severity":1,"message":"516","line":1,"column":29,"nodeType":"452","messageId":"453","endLine":1,"endColumn":45},{"ruleId":"450","severity":1,"message":"517","line":1,"column":47,"nodeType":"452","messageId":"453","endLine":1,"endColumn":56},{"ruleId":"450","severity":1,"message":"485","line":1,"column":86,"nodeType":"452","messageId":"453","endLine":1,"endColumn":93},{"ruleId":"450","severity":1,"message":"486","line":1,"column":163,"nodeType":"452","messageId":"453","endLine":1,"endColumn":167},{"ruleId":"450","severity":1,"message":"541","line":5,"column":10,"nodeType":"452","messageId":"453","endLine":5,"endColumn":27},{"ruleId":"472","severity":1,"message":"473","line":15,"column":42,"nodeType":"474","messageId":"475","endLine":15,"endColumn":45},{"ruleId":"450","severity":1,"message":"542","line":23,"column":11,"nodeType":"452","messageId":"453","endLine":23,"endColumn":23},{"ruleId":"450","severity":1,"message":"543","line":24,"column":11,"nodeType":"452","messageId":"453","endLine":24,"endColumn":22},{"ruleId":"450","severity":1,"message":"544","line":38,"column":18,"nodeType":"452","messageId":"453","endLine":38,"endColumn":25},{"ruleId":"466","severity":1,"message":"545","line":65,"column":8,"nodeType":"468","endLine":65,"endColumn":25,"suggestions":"546"},{"ruleId":"491","severity":1,"message":"492","line":93,"column":46,"nodeType":"493","messageId":"494","endLine":93,"endColumn":160,"fix":"547"},{"ruleId":"491","severity":1,"message":"492","line":109,"column":50,"nodeType":"493","messageId":"494","endLine":109,"endColumn":114,"fix":"548"},{"ruleId":"491","severity":1,"message":"492","line":146,"column":29,"nodeType":"493","messageId":"494","endLine":146,"endColumn":125,"fix":"549"},{"ruleId":"491","severity":1,"message":"492","line":149,"column":29,"nodeType":"493","messageId":"494","endLine":149,"endColumn":209,"fix":"550"},{"ruleId":"450","severity":1,"message":"496","line":2,"column":10,"nodeType":"452","messageId":"453","endLine":2,"endColumn":14},{"ruleId":"450","severity":1,"message":"485","line":2,"column":16,"nodeType":"452","messageId":"453","endLine":2,"endColumn":23},{"ruleId":"450","severity":1,"message":"551","line":2,"column":58,"nodeType":"452","messageId":"453","endLine":2,"endColumn":64},{"ruleId":"450","severity":1,"message":"552","line":2,"column":66,"nodeType":"452","messageId":"453","endLine":2,"endColumn":76},{"ruleId":"450","severity":1,"message":"490","line":2,"column":78,"nodeType":"452","messageId":"453","endLine":2,"endColumn":82},{"ruleId":"450","severity":1,"message":"487","line":2,"column":84,"nodeType":"452","messageId":"453","endLine":2,"endColumn":90},{"ruleId":"450","severity":1,"message":"517","line":2,"column":99,"nodeType":"452","messageId":"453","endLine":2,"endColumn":108},{"ruleId":"450","severity":1,"message":"489","line":2,"column":110,"nodeType":"452","messageId":"453","endLine":2,"endColumn":116},{"ruleId":"450","severity":1,"message":"553","line":4,"column":10,"nodeType":"452","messageId":"453","endLine":4,"endColumn":16},{"ruleId":"450","severity":1,"message":"510","line":11,"column":10,"nodeType":"452","messageId":"453","endLine":11,"endColumn":24},{"ruleId":"472","severity":1,"message":"473","line":19,"column":40,"nodeType":"474","messageId":"475","endLine":19,"endColumn":43},{"ruleId":"466","severity":1,"message":"554","line":50,"column":8,"nodeType":"468","endLine":50,"endColumn":17,"suggestions":"555"},{"ruleId":"556","severity":1,"message":"557","line":72,"column":32,"nodeType":"558","messageId":"475","endLine":72,"endColumn":34},{"ruleId":"450","severity":1,"message":"451","line":1,"column":17,"nodeType":"452","messageId":"453","endLine":1,"endColumn":25},{"ruleId":"450","severity":1,"message":"517","line":2,"column":17,"nodeType":"452","messageId":"453","endLine":2,"endColumn":26},{"ruleId":"450","severity":1,"message":"496","line":2,"column":28,"nodeType":"452","messageId":"453","endLine":2,"endColumn":32},{"ruleId":"450","severity":1,"message":"485","line":2,"column":34,"nodeType":"452","messageId":"453","endLine":2,"endColumn":41},{"ruleId":"472","severity":1,"message":"473","line":10,"column":36,"nodeType":"474","messageId":"475","endLine":10,"endColumn":38},{"ruleId":"559","severity":1,"message":"560","line":18,"column":25,"nodeType":"483","messageId":"561","endLine":18,"endColumn":42,"fix":"562"},{"ruleId":"466","severity":1,"message":"563","line":55,"column":8,"nodeType":"468","endLine":55,"endColumn":10,"suggestions":"564"},{"ruleId":"450","severity":1,"message":"490","line":2,"column":18,"nodeType":"452","messageId":"453","endLine":2,"endColumn":22},{"ruleId":"450","severity":1,"message":"486","line":2,"column":24,"nodeType":"452","messageId":"453","endLine":2,"endColumn":28},{"ruleId":"450","severity":1,"message":"516","line":2,"column":37,"nodeType":"452","messageId":"453","endLine":2,"endColumn":53},{"ruleId":"450","severity":1,"message":"517","line":2,"column":55,"nodeType":"452","messageId":"453","endLine":2,"endColumn":64},{"ruleId":"450","severity":1,"message":"515","line":2,"column":66,"nodeType":"452","messageId":"453","endLine":2,"endColumn":76},{"ruleId":"450","severity":1,"message":"519","line":2,"column":128,"nodeType":"452","messageId":"453","endLine":2,"endColumn":139},{"ruleId":"450","severity":1,"message":"536","line":3,"column":10,"nodeType":"452","messageId":"453","endLine":3,"endColumn":25},{"ruleId":"472","severity":1,"message":"473","line":13,"column":61,"nodeType":"474","messageId":"475","endLine":13,"endColumn":64},{"ruleId":"491","severity":1,"message":"492","line":93,"column":62,"nodeType":"493","messageId":"494","endLine":93,"endColumn":126,"fix":"565"},{"ruleId":"466","severity":1,"message":"479","line":29,"column":6,"nodeType":"468","endLine":29,"endColumn":25,"suggestions":"566"},{"ruleId":"450","severity":1,"message":"567","line":2,"column":10,"nodeType":"452","messageId":"453","endLine":2,"endColumn":23},{"ruleId":"450","severity":1,"message":"568","line":5,"column":8,"nodeType":"452","messageId":"453","endLine":5,"endColumn":20},{"ruleId":"450","severity":1,"message":"569","line":10,"column":10,"nodeType":"452","messageId":"453","endLine":10,"endColumn":27},{"ruleId":"481","severity":1,"message":"482","line":23,"column":20,"nodeType":"483","messageId":"484","endLine":23,"endColumn":43},{"ruleId":"450","severity":1,"message":"490","line":2,"column":18,"nodeType":"452","messageId":"453","endLine":2,"endColumn":22},{"ruleId":"450","severity":1,"message":"486","line":2,"column":24,"nodeType":"452","messageId":"453","endLine":2,"endColumn":28},{"ruleId":"450","severity":1,"message":"516","line":2,"column":37,"nodeType":"452","messageId":"453","endLine":2,"endColumn":53},{"ruleId":"450","severity":1,"message":"517","line":2,"column":55,"nodeType":"452","messageId":"453","endLine":2,"endColumn":64},{"ruleId":"450","severity":1,"message":"515","line":2,"column":66,"nodeType":"452","messageId":"453","endLine":2,"endColumn":76},{"ruleId":"450","severity":1,"message":"519","line":2,"column":128,"nodeType":"452","messageId":"453","endLine":2,"endColumn":139},{"ruleId":"450","severity":1,"message":"570","line":3,"column":10,"nodeType":"452","messageId":"453","endLine":3,"endColumn":24},{"ruleId":"450","severity":1,"message":"541","line":5,"column":10,"nodeType":"452","messageId":"453","endLine":5,"endColumn":27},{"ruleId":"472","severity":1,"message":"473","line":15,"column":59,"nodeType":"474","messageId":"475","endLine":15,"endColumn":62},{"ruleId":"491","severity":1,"message":"492","line":106,"column":64,"nodeType":"493","messageId":"494","endLine":106,"endColumn":128,"fix":"571"},{"ruleId":"450","severity":1,"message":"572","line":2,"column":23,"nodeType":"452","messageId":"453","endLine":2,"endColumn":32},{"ruleId":"450","severity":1,"message":"518","line":2,"column":34,"nodeType":"452","messageId":"453","endLine":2,"endColumn":39},{"ruleId":"450","severity":1,"message":"517","line":3,"column":17,"nodeType":"452","messageId":"453","endLine":3,"endColumn":26},{"ruleId":"450","severity":1,"message":"496","line":3,"column":28,"nodeType":"452","messageId":"453","endLine":3,"endColumn":32},{"ruleId":"450","severity":1,"message":"485","line":3,"column":34,"nodeType":"452","messageId":"453","endLine":3,"endColumn":41},{"ruleId":"450","severity":1,"message":"573","line":1,"column":16,"nodeType":"452","messageId":"453","endLine":1,"endColumn":25},{"ruleId":"450","severity":1,"message":"574","line":2,"column":15,"nodeType":"452","messageId":"453","endLine":2,"endColumn":23},{"ruleId":"450","severity":1,"message":"490","line":2,"column":25,"nodeType":"452","messageId":"453","endLine":2,"endColumn":29},{"ruleId":"450","severity":1,"message":"503","line":2,"column":31,"nodeType":"452","messageId":"453","endLine":2,"endColumn":35},{"ruleId":"450","severity":1,"message":"575","line":3,"column":10,"nodeType":"452","messageId":"453","endLine":3,"endColumn":16},{"ruleId":"450","severity":1,"message":"576","line":2,"column":15,"nodeType":"452","messageId":"453","endLine":2,"endColumn":20},{"ruleId":"450","severity":1,"message":"577","line":2,"column":22,"nodeType":"452","messageId":"453","endLine":2,"endColumn":27},{"ruleId":"450","severity":1,"message":"574","line":2,"column":29,"nodeType":"452","messageId":"453","endLine":2,"endColumn":37},{"ruleId":"450","severity":1,"message":"519","line":2,"column":85,"nodeType":"452","messageId":"453","endLine":2,"endColumn":96},{"ruleId":"450","severity":1,"message":"507","line":2,"column":205,"nodeType":"452","messageId":"453","endLine":2,"endColumn":211},{"ruleId":"450","severity":1,"message":"578","line":2,"column":218,"nodeType":"452","messageId":"453","endLine":2,"endColumn":229},{"ruleId":"450","severity":1,"message":"579","line":2,"column":231,"nodeType":"452","messageId":"453","endLine":2,"endColumn":238},{"ruleId":"450","severity":1,"message":"580","line":2,"column":240,"nodeType":"452","messageId":"453","endLine":2,"endColumn":251},{"ruleId":"450","severity":1,"message":"581","line":3,"column":10,"nodeType":"452","messageId":"453","endLine":3,"endColumn":22},{"ruleId":"450","severity":1,"message":"582","line":10,"column":8,"nodeType":"452","messageId":"453","endLine":10,"endColumn":19},{"ruleId":"450","severity":1,"message":"583","line":11,"column":8,"nodeType":"452","messageId":"453","endLine":11,"endColumn":15},{"ruleId":"450","severity":1,"message":"584","line":29,"column":9,"nodeType":"452","messageId":"453","endLine":29,"endColumn":16},{"ruleId":"466","severity":1,"message":"585","line":89,"column":8,"nodeType":"468","endLine":89,"endColumn":16,"suggestions":"586"},{"ruleId":"450","severity":1,"message":"587","line":126,"column":15,"nodeType":"452","messageId":"453","endLine":126,"endColumn":30},{"ruleId":"450","severity":1,"message":"588","line":2,"column":10,"nodeType":"452","messageId":"453","endLine":2,"endColumn":15},{"ruleId":"450","severity":1,"message":"589","line":39,"column":56,"nodeType":"452","messageId":"453","endLine":39,"endColumn":63},{"ruleId":"450","severity":1,"message":"590","line":53,"column":9,"nodeType":"452","messageId":"453","endLine":53,"endColumn":26},{"ruleId":"450","severity":1,"message":"591","line":79,"column":15,"nodeType":"452","messageId":"453","endLine":79,"endColumn":25},{"ruleId":"466","severity":1,"message":"592","line":106,"column":6,"nodeType":"468","endLine":106,"endColumn":15,"suggestions":"593"},{"ruleId":"466","severity":1,"message":"594","line":108,"column":9,"nodeType":"595","endLine":111,"endColumn":4,"suggestions":"596"},{"ruleId":"466","severity":1,"message":"597","line":108,"column":9,"nodeType":"595","endLine":111,"endColumn":4,"suggestions":"598"},{"ruleId":"450","severity":1,"message":"599","line":2,"column":8,"nodeType":"452","messageId":"453","endLine":2,"endColumn":14},{"ruleId":"450","severity":1,"message":"600","line":3,"column":10,"nodeType":"452","messageId":"453","endLine":3,"endColumn":16},{"ruleId":"450","severity":1,"message":"486","line":2,"column":18,"nodeType":"452","messageId":"453","endLine":2,"endColumn":22},{"ruleId":"450","severity":1,"message":"500","line":2,"column":24,"nodeType":"452","messageId":"453","endLine":2,"endColumn":27},{"ruleId":"450","severity":1,"message":"488","line":2,"column":35,"nodeType":"452","messageId":"453","endLine":2,"endColumn":41},"@typescript-eslint/no-unused-vars","'Suspense' is defined but never used.","Identifier","unusedVar","'ColorModeScript' is defined but never used.","no-native-reassign",["601"],"no-negated-in-lhs",["602"],"'lazy' is defined but never used.","'Auth' is defined but never used.","'bsc' is defined but never used.",["601"],["602"],"'Redirect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["603"],"React Hook useEffect has a missing dependency: 'refreshBalance'. Either include it or remove the dependency array.",["604"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["605"],"no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","'Heading' is defined but never used.","'Text' is defined but never used.","'Button' is defined but never used.","'Spacer' is defined but never used.","'Center' is defined but never used.","'Icon' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"606","text":"607"},"'Grid' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Box' is defined but never used.","'VStack' is defined but never used.","'Divider' is defined but never used.","'Flex' is defined but never used.","'AbsoluteCenter' is defined but never used.","'Tag' is defined but never used.","'TagLabel' is defined but never used.","'Portal' is defined but never used.","'HiOutlineDatabase' is defined but never used.","'FiExternalLink' is defined but never used.","'GraphStateEnum' is defined but never used.","'pulse' is assigned a value but never used.","'connector' is assigned a value but never used.","'StatusIcon' is defined but never used.","'StyledIdenticonContainer' is assigned a value but never used.","'AlertTitle' is defined but never used.","'AlertDescription' is defined but never used.","'AlertIcon' is defined but never used.","'Input' is defined but never used.","'ModalHeader' is defined but never used.","'propNames' is defined but never used.","'Stack' is defined but never used.","'Tab' is defined but never used.","'TabList' is defined but never used.","'TabPanel' is defined but never used.","'TabPanels' is defined but never used.","'Tabs' is defined but never used.","'TemplateVariables' is defined but never used.","'FiEdit' is defined but never used.","'GraphCreationProps' is defined but never used.",{"range":"608","text":"607"},"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'ButtonGroup' is defined but never used.","'FiArrowDownLeft' is defined but never used.","'UnsupportedChainIdError' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshBalanceContract'. Either include it or remove the dependency array.",["609"],"'AnyAction' is defined but never used.","'getDecimalsAmount' is defined but never used.","'handleChange' is assigned a value but never used.","'checkAccess' is assigned a value but never used.","'setAddr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'contract'. Either include it or remove the dependency array.",["610"],{"range":"611","text":"607"},{"range":"612","text":"607"},{"range":"613","text":"607"},{"range":"614","text":"607"},"'HStack' is defined but never used.","'IconButton' is defined but never used.","'HiPlus' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["615"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","new-parens","Missing '()' invoking a constructor.","missing",{"range":"616","text":"617"},"React Hook useEffect has a missing dependency: 'applyCss'. Either include it or remove the dependency array.",["618"],{"range":"619","text":"607"},["620"],"'ErrorResponse' is defined but never used.","'AuthResponse' is defined but never used.","'GraphStateRequest' is defined but never used.","'FiArrowUpRight' is defined but never used.",{"range":"621","text":"607"},"'FormLabel' is defined but never used.","'useEffect' is defined but never used.","'useRadio' is defined but never used.","'FiFile' is defined but never used.","'Image' is defined but never used.","'Badge' is defined but never used.","'LinkOverlay' is defined but never used.","'LinkBox' is defined but never used.","'MenuDivider' is defined but never used.","'HiOutlineEye' is defined but never used.","'useInterval' is defined but never used.","'Cookies' is defined but never used.","'secDiff' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tickLogs'. Either include it or remove the dependency array.",["622"],"'result' is assigned a value but never used.","'Modal' is defined but never used.","'library' is assigned a value but never used.","'binanceWalletSign' is assigned a value but never used.","'firstChain' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activate', 'connector', 'dispatch', and 'history'. Either include them or remove the dependency array.",["623"],"The 'toggleWalletModal' function makes the dependencies of useEffect Hook (at line 118) change on every render. To fix this, wrap the definition of 'toggleWalletModal' in its own useCallback() Hook.","VariableDeclarator",["624"],"The 'toggleWalletModal' function makes the dependencies of useEffect Hook (at line 183) change on every render. To fix this, wrap the definition of 'toggleWalletModal' in its own useCallback() Hook.",["625"],"'styled' is defined but never used.","'darken' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},[1759,1759]," rel=\"noreferrer\"",[27531,27531],{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},[3982,3982],[4786,4786],[7080,7080],[7399,7399],{"desc":"636","fix":"637"},[612,612],"()",{"desc":"638","fix":"639"},[3997,3997],{"desc":"640","fix":"641"},[5215,5215],{"desc":"642","fix":"643"},{"desc":"644","fix":"645"},{"desc":"646","fix":"647"},{"desc":"646","fix":"648"},"Update the dependencies array to be: [account, history]",{"range":"649","text":"650"},"Update the dependencies array to be: [chainId, account, refreshBalance]",{"range":"651","text":"652"},"Update the dependencies array to be: [account, dispatch, tokenContract]",{"range":"653","text":"654"},"Update the dependencies array to be: [account, refreshBalanceContract]",{"range":"655","text":"656"},"Update the dependencies array to be: [account, access, contract]",{"range":"657","text":"658"},"Update the dependencies array to be: [account, dispatch]",{"range":"659","text":"660"},"Update the dependencies array to be: [applyCss]",{"range":"661","text":"662"},"Update the dependencies array to be: [account, contract, dispatch]",{"range":"663","text":"664"},"Update the dependencies array to be: [inLogs, tickLogs]",{"range":"665","text":"666"},"Update the dependencies array to be: [account, activate, connector, dispatch, history]",{"range":"667","text":"668"},"Wrap the definition of 'toggleWalletModal' in its own useCallback() Hook.",{"range":"669","text":"670"},{"range":"671","text":"670"},[581,590],"[account, history]",[1353,1371],"[chainId, account, refreshBalance]",[963,987],"[account, dispatch, tokenContract]",[688,697],"[account, refreshBalanceContract]",[2572,2589],"[account, access, contract]",[1672,1681],"[account, dispatch]",[2690,2692],"[applyCss]",[1021,1040],"[account, contract, dispatch]",[2819,2827],"[inLogs, tickLogs]",[3224,3233],"[account, activate, connector, dispatch, history]",[3264,3420],"useCallback(() => {\n    if (walletModalOpen) dispatch({ type: CLOSE_MODAL, name: \"walletManager\" });\n    else dispatch({ type: OPEN_MODAL, name: \"walletManager\" });\n  })",[3264,3420]]